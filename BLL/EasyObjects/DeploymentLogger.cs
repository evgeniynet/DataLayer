// Generated by MyGeneration Version # (1.2.0.2)

using System;
using System.Data;

namespace BWA.bigWebDesk.BLL
{
    public class DeploymentLogger : BWA.bigWebDesk.DAL.DeploymentLogger
    {
        public DeploymentLogger(Guid organizationId)
        {
            this.ConnectionString = Micajah.Common.Bll.Providers.OrganizationProvider.GetConnectionString(organizationId);
        }

        public static bool IsRegistered(Guid organizationId, int companyID)
        {
            if (companyID > 0)
            {
                DeploymentLogger dl = new DeploymentLogger(organizationId);
                dl.Where.CompanyID.Value = companyID;
                dl.Where.CompanyID.Operator = NCI.EasyObjects.WhereParameter.Operand.Equal;
                dl.Query.Load();
                return (dl.RowCount > 0 ? true : false);
            }
            return false;
        }

        public static int GetRegistrationID(Guid organizationId, int companyID)
        {
            if (companyID > 0)
            {
                DeploymentLogger dl = new DeploymentLogger(organizationId);
                dl.Where.CompanyID.Value = companyID;
                dl.Where.CompanyID.Operator = NCI.EasyObjects.WhereParameter.Operand.Equal;
                dl.Query.Load();
                return (dl.ID);
            }
            return 0;
        }

        public static DataTable GetCompanyData(Guid organizationId, int companyID)
        {
            if (companyID > 0)
            {
                DeploymentLogger dl = new DeploymentLogger(organizationId);
                dl.Where.CompanyID.Value = companyID;
                dl.Where.CompanyID.Operator = NCI.EasyObjects.WhereParameter.Operand.Equal;
                dl.Query.Load();
                return dl.DefaultView.Table;
            }
            return null;
        }

        // adds company data from DL database - organizationID and
        // departmentID to provide the link between two applications -
        // DeploymentLogger and bigWebDesk
        public static int AddCompanyData(Guid organizationId, int companyID,
                                         int organizationID,
                                         int departmentID)
        {
            if (companyID > 0 && organizationID > 0 &&
                departmentID > 0)
            {
                DeploymentLogger dl = new DeploymentLogger(organizationId);
                dl.AddNew();
                dl.CompanyID = companyID;
                dl.DLOrganizationID = organizationID;
                dl.DLDepartmentID = departmentID;
                dl.Enabled = false;
                dl.Save();
                return dl.ID;
            }
            return 0;
        }
    }
}