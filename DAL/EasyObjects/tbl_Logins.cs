/*
'===============================================================================
'  Generated From - CSharp_EasyObject_BusinessEntity.vbgen
' 
'  ** IMPORTANT  ** 
'  How to Generate your stored procedures:
' 
'  SQL      = SQL_DAAB_StoredProcs.vbgen
'  
'  This object is 'abstract' which means you need to inherit from it to be able
'  to instantiate it.  This is very easily done. You can override properties and
'  methods in your derived class, this allows you to regenerate this class at any
'  time and not worry about overwriting custom code. 
'
'  NEVER EDIT THIS FILE.
'
'  public class YourObject :  _YourObject
'  {
'
'  }
'
'===============================================================================
*/

// Generated by MyGeneration Version # (1.3.0.3)

using System;
using System.Data;
using System.Data.Common;
using System.Configuration;
using System.Collections;
using System.Collections.Specialized;
using System.Xml;
using System.IO;

using Microsoft.Practices.EnterpriseLibrary.Data;
using NCI.EasyObjects;

namespace BWA.bigWebDesk.DAL
{

	#region Schema

	public class tbl_LoginsSchema : NCI.EasyObjects.Schema
	{
		private static ArrayList _entries;
		public static SchemaItem Id = new SchemaItem("id", DbType.Int32, true, false, false, true, true, false);
		public static SchemaItem Email = new SchemaItem("Email", DbType.AnsiString, SchemaItemJustify.None, 50, false, false, false, false);
		public static SchemaItem FirstName = new SchemaItem("FirstName", DbType.AnsiString, SchemaItemJustify.None, 50, false, false, false, false);
		public static SchemaItem LastName = new SchemaItem("LastName", DbType.AnsiString, SchemaItemJustify.None, 50, false, false, false, false);
		public static SchemaItem Password = new SchemaItem("Password", DbType.AnsiString, SchemaItemJustify.None, 50, false, false, false, false);
		public static SchemaItem ConfigUnassignedQue = new SchemaItem("ConfigUnassignedQue", DbType.Boolean, false, false, false, false, false, true);
		public static SchemaItem Title = new SchemaItem("Title", DbType.AnsiString, SchemaItemJustify.None, 30, true, false, false, false);
		public static SchemaItem Phone = new SchemaItem("Phone", DbType.AnsiString, SchemaItemJustify.None, 20, true, false, false, false);
		public static SchemaItem MobilePhone = new SchemaItem("MobilePhone", DbType.AnsiString, SchemaItemJustify.None, 20, true, false, false, false);
		public static SchemaItem SintHourOffset = new SchemaItem("sintHourOffset", DbType.Int16, false, true, false, false, false, false);
		public static SchemaItem TintDateFormat = new SchemaItem("tintDateFormat", DbType.Byte, false, true, false, false, false, false);
		public static SchemaItem Guid = new SchemaItem("Guid", DbType.Guid, false, true, false, false, false, false);
		public static SchemaItem DtUTCUpdated = new SchemaItem("dtUTCUpdated", DbType.DateTime, false, true, false, false, false, false);
		public static SchemaItem LdapUserSID = new SchemaItem("LdapUserSID", DbType.String, SchemaItemJustify.None, 255, true, false, false, false);
		public static SchemaItem LdapUserAccount = new SchemaItem("LdapUserAccount", DbType.String, SchemaItemJustify.None, 255, true, false, false, false);

		public override ArrayList SchemaEntries
		{
			get
			{
				if (_entries == null )
				{
					_entries = new ArrayList();
					_entries.Add(tbl_LoginsSchema.Id);
					_entries.Add(tbl_LoginsSchema.Email);
					_entries.Add(tbl_LoginsSchema.FirstName);
					_entries.Add(tbl_LoginsSchema.LastName);
					_entries.Add(tbl_LoginsSchema.Password);
					_entries.Add(tbl_LoginsSchema.ConfigUnassignedQue);
					_entries.Add(tbl_LoginsSchema.Title);
					_entries.Add(tbl_LoginsSchema.Phone);
					_entries.Add(tbl_LoginsSchema.MobilePhone);
					_entries.Add(tbl_LoginsSchema.SintHourOffset);
					_entries.Add(tbl_LoginsSchema.TintDateFormat);
					_entries.Add(tbl_LoginsSchema.Guid);
					_entries.Add(tbl_LoginsSchema.DtUTCUpdated);
					_entries.Add(tbl_LoginsSchema.LdapUserSID);
					_entries.Add(tbl_LoginsSchema.LdapUserAccount);
				}
				return _entries;
			}
		}
	}
	#endregion

	public abstract class tbl_Logins : EasyObject
	{

		public tbl_Logins()
		{
			tbl_LoginsSchema _schema = new tbl_LoginsSchema();
			this.SchemaEntries = _schema.SchemaEntries;
			this.SchemaGlobal = "dbo";
		}
		
		public override void FlushData() 	 
		{ 	 
			this._whereClause = null; 	 
			this._aggregateClause = null; 	 
			base.FlushData(); 	 
		}
			   
		/// <summary>
		/// Loads the business object with info from the database, based on the requested primary key.
		/// </summary>
		/// <param name="Id"></param>
		/// <returns>A Boolean indicating success or failure of the query</returns>
		public bool LoadByPrimaryKey(int Id)
		{
			switch(this.DefaultCommandType)
			{
				case CommandType.StoredProcedure:
					ListDictionary parameters = new ListDictionary();

					// Add in parameters
					parameters.Add(tbl_LoginsSchema.Id.FieldName, Id);

					return base.LoadFromSql(this.SchemaStoredProcedureWithSeparator + "Gettbl_Logins", parameters, CommandType.StoredProcedure);

				case CommandType.Text:
					this.Query.ClearAll();
					this.Where.WhereClauseReset();
					this.Where.Id.Value = Id;
					return this.Query.Load();

				default:
					throw new ArgumentException("Invalid CommandType", "commandType");
			}
		}
	
		/// <summary>
		/// Loads all records from the table.
		/// </summary>
		/// <returns>A Boolean indicating success or failure of the query</returns>
		public bool LoadAll()
		{
			switch(this.DefaultCommandType)
			{
				case CommandType.StoredProcedure:
					return base.LoadFromSql(this.SchemaStoredProcedureWithSeparator + "GetAlltbl_Logins", null, CommandType.StoredProcedure);

				case CommandType.Text:
					this.Query.ClearAll();
					this.Where.WhereClauseReset();
					return this.Query.Load();

				default:
					throw new ArgumentException("Invalid CommandType", "commandType");
			}
		}

		/// <summary>
		/// Adds a new record to the internal table.
		/// </summary>
		public override void AddNew()
		{
			base.AddNew();
		}

		protected override DbCommand GetInsertCommand(CommandType commandType)
		{	
			DbCommand dbCommand;

			// Create the Database object, using the default database service. The
			// default database service is determined through configuration.
			Database db = GetDatabase();

			switch(commandType)
			{
				case CommandType.StoredProcedure:
					string sqlCommand = this.SchemaStoredProcedureWithSeparator + "Addtbl_Logins";
					dbCommand = db.GetStoredProcCommand(sqlCommand);

					db.AddParameter(dbCommand, "id", DbType.Int32, 0, ParameterDirection.Output, true, 0, 0, "id", DataRowVersion.Default, Convert.DBNull);
					CreateParameters(db, dbCommand);
					
					return dbCommand;

				case CommandType.Text:
					this.Query.ClearAll();
					this.Where.WhereClauseReset();
					foreach(SchemaItem item in this.SchemaEntries)
					{
						if (!(item.IsAutoKey || item.IsComputed))
						{
							this.Query.AddInsertColumn(item);
						}
					}
					dbCommand = this.Query.GetInsertCommandWrapper();

					dbCommand.Parameters.Clear();
					CreateParameters(db, dbCommand);
					db.AddParameter(dbCommand, "id", DbType.Int32, 0, ParameterDirection.Output, true, 0, 0, "id", DataRowVersion.Default, Convert.DBNull);
					
					return dbCommand;

				default:
					throw new ArgumentException("Invalid CommandType", "commandType");
			}
		}

		protected override DbCommand GetUpdateCommand(CommandType commandType)
		{
            DbCommand dbCommand;

			// Create the Database object, using the default database service. The
			// default database service is determined through configuration.
			Database db = GetDatabase();

			switch(commandType)
			{
				case CommandType.StoredProcedure:
					string sqlCommand = this.SchemaStoredProcedureWithSeparator + "Updatetbl_Logins";
					dbCommand = db.GetStoredProcCommand(sqlCommand);

					db.AddInParameter(dbCommand, "id", DbType.Int32, "id", DataRowVersion.Current);
					CreateParameters(db, dbCommand);
					
					return dbCommand;

				case CommandType.Text:
					this.Query.ClearAll();
					foreach(SchemaItem item in this.SchemaEntries)
					{
						if (!(item.IsAutoKey || item.IsComputed))
						{
							this.Query.AddUpdateColumn(item);
						}
					}

					this.Where.WhereClauseReset();
					this.Where.Id.Operator = WhereParameter.Operand.Equal;
					dbCommand = this.Query.GetUpdateCommandWrapper();

					dbCommand.Parameters.Clear();
					CreateParameters(db, dbCommand);
					db.AddInParameter(dbCommand, "id", DbType.Int32, "id", DataRowVersion.Current);
					
					return dbCommand;

				default:
					throw new ArgumentException("Invalid CommandType", "commandType");
			}
		}

		protected override DbCommand GetDeleteCommand(CommandType commandType)
		{
            DbCommand dbCommand;

			// Create the Database object, using the default database service. The
			// default database service is determined through configuration.
			Database db = GetDatabase();

			switch(commandType)
			{
				case CommandType.StoredProcedure:
					string sqlCommand = this.SchemaStoredProcedureWithSeparator + "Deletetbl_Logins";
					dbCommand = db.GetStoredProcCommand(sqlCommand);
					db.AddInParameter(dbCommand, "id", DbType.Int32, "id", DataRowVersion.Current);
					
					return dbCommand;

				case CommandType.Text:
					this.Query.ClearAll();
					this.Where.WhereClauseReset();
					this.Where.Id.Operator = WhereParameter.Operand.Equal;
					dbCommand = this.Query.GetDeleteCommandWrapper();

					dbCommand.Parameters.Clear();
					db.AddInParameter(dbCommand, "id", DbType.Int32, "id", DataRowVersion.Current);
					
					return dbCommand;

				default:
					throw new ArgumentException("Invalid CommandType", "commandType");
			}
		}

		private void CreateParameters(Database db, DbCommand dbCommand)
		{
			db.AddInParameter(dbCommand, "Email", DbType.AnsiString, "Email", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "FirstName", DbType.AnsiString, "FirstName", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "LastName", DbType.AnsiString, "LastName", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "Password", DbType.AnsiString, "Password", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "ConfigUnassignedQue", DbType.Boolean, "ConfigUnassignedQue", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "Title", DbType.AnsiString, "Title", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "Phone", DbType.AnsiString, "Phone", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "MobilePhone", DbType.AnsiString, "MobilePhone", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "sintHourOffset", DbType.Int16, "sintHourOffset", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "tintDateFormat", DbType.Byte, "tintDateFormat", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "Guid", DbType.Guid, "Guid", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "dtUTCUpdated", DbType.DateTime, "dtUTCUpdated", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "LdapUserSID", DbType.String, "LdapUserSID", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "LdapUserAccount", DbType.String, "LdapUserAccount", DataRowVersion.Current);
		}
		
		#region Properties
		public virtual int Id
		{
			get
			{
				return this.GetInteger(tbl_LoginsSchema.Id.FieldName);
	    	}
			set
			{
				this.SetInteger(tbl_LoginsSchema.Id.FieldName, value);
			}
		}
		public virtual string Email
		{
			get
			{
				return this.GetString(tbl_LoginsSchema.Email.FieldName);
	    	}
			set
			{
				this.SetString(tbl_LoginsSchema.Email.FieldName, value);
			}
		}
		public virtual string FirstName
		{
			get
			{
				return this.GetString(tbl_LoginsSchema.FirstName.FieldName);
	    	}
			set
			{
				this.SetString(tbl_LoginsSchema.FirstName.FieldName, value);
			}
		}
		public virtual string LastName
		{
			get
			{
				return this.GetString(tbl_LoginsSchema.LastName.FieldName);
	    	}
			set
			{
				this.SetString(tbl_LoginsSchema.LastName.FieldName, value);
			}
		}
		public virtual string Password
		{
			get
			{
				return this.GetString(tbl_LoginsSchema.Password.FieldName);
	    	}
			set
			{
				this.SetString(tbl_LoginsSchema.Password.FieldName, value);
			}
		}
		public virtual bool ConfigUnassignedQue
		{
			get
			{
				return this.GetBoolean(tbl_LoginsSchema.ConfigUnassignedQue.FieldName);
	    	}
			set
			{
				this.SetBoolean(tbl_LoginsSchema.ConfigUnassignedQue.FieldName, value);
			}
		}
		public virtual string Title
		{
			get
			{
				return this.GetString(tbl_LoginsSchema.Title.FieldName);
	    	}
			set
			{
				this.SetString(tbl_LoginsSchema.Title.FieldName, value);
			}
		}
		public virtual string Phone
		{
			get
			{
				return this.GetString(tbl_LoginsSchema.Phone.FieldName);
	    	}
			set
			{
				this.SetString(tbl_LoginsSchema.Phone.FieldName, value);
			}
		}
		public virtual string MobilePhone
		{
			get
			{
				return this.GetString(tbl_LoginsSchema.MobilePhone.FieldName);
	    	}
			set
			{
				this.SetString(tbl_LoginsSchema.MobilePhone.FieldName, value);
			}
		}
		public virtual short SintHourOffset
		{
			get
			{
				return this.GetShort(tbl_LoginsSchema.SintHourOffset.FieldName);
	    	}
			set
			{
				this.SetShort(tbl_LoginsSchema.SintHourOffset.FieldName, value);
			}
		}
		public virtual byte TintDateFormat
		{
			get
			{
				return this.GetByte(tbl_LoginsSchema.TintDateFormat.FieldName);
	    	}
			set
			{
				this.SetByte(tbl_LoginsSchema.TintDateFormat.FieldName, value);
			}
		}
		public virtual Guid Guid
		{
			get
			{
				return this.GetGuid(tbl_LoginsSchema.Guid.FieldName);
	    	}
			set
			{
				this.SetGuid(tbl_LoginsSchema.Guid.FieldName, value);
			}
		}
		public virtual DateTime DtUTCUpdated
		{
			get
			{
				return this.GetDateTime(tbl_LoginsSchema.DtUTCUpdated.FieldName);
	    	}
			set
			{
				this.SetDateTime(tbl_LoginsSchema.DtUTCUpdated.FieldName, value);
			}
		}
		public virtual string LdapUserSID
		{
			get
			{
				return this.GetString(tbl_LoginsSchema.LdapUserSID.FieldName);
	    	}
			set
			{
				this.SetString(tbl_LoginsSchema.LdapUserSID.FieldName, value);
			}
		}
		public virtual string LdapUserAccount
		{
			get
			{
				return this.GetString(tbl_LoginsSchema.LdapUserAccount.FieldName);
	    	}
			set
			{
				this.SetString(tbl_LoginsSchema.LdapUserAccount.FieldName, value);
			}
		}

		public override string TableName
		{
			get { return "tbl_Logins"; }
		}
		
		#endregion		
		
		#region String Properties
	
		public virtual string s_Id
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginsSchema.Id.FieldName) ? string.Empty : base.GetIntegerAsString(tbl_LoginsSchema.Id.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginsSchema.Id.FieldName);
				else
					this.Id = base.SetIntegerAsString(tbl_LoginsSchema.Id.FieldName, value);
			}
		}

		public virtual string s_Email
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginsSchema.Email.FieldName) ? string.Empty : base.GetStringAsString(tbl_LoginsSchema.Email.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginsSchema.Email.FieldName);
				else
					this.Email = base.SetStringAsString(tbl_LoginsSchema.Email.FieldName, value);
			}
		}

		public virtual string s_FirstName
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginsSchema.FirstName.FieldName) ? string.Empty : base.GetStringAsString(tbl_LoginsSchema.FirstName.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginsSchema.FirstName.FieldName);
				else
					this.FirstName = base.SetStringAsString(tbl_LoginsSchema.FirstName.FieldName, value);
			}
		}

		public virtual string s_LastName
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginsSchema.LastName.FieldName) ? string.Empty : base.GetStringAsString(tbl_LoginsSchema.LastName.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginsSchema.LastName.FieldName);
				else
					this.LastName = base.SetStringAsString(tbl_LoginsSchema.LastName.FieldName, value);
			}
		}

		public virtual string s_Password
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginsSchema.Password.FieldName) ? string.Empty : base.GetStringAsString(tbl_LoginsSchema.Password.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginsSchema.Password.FieldName);
				else
					this.Password = base.SetStringAsString(tbl_LoginsSchema.Password.FieldName, value);
			}
		}

		public virtual string s_ConfigUnassignedQue
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginsSchema.ConfigUnassignedQue.FieldName) ? string.Empty : base.GetBooleanAsString(tbl_LoginsSchema.ConfigUnassignedQue.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginsSchema.ConfigUnassignedQue.FieldName);
				else
					this.ConfigUnassignedQue = base.SetBooleanAsString(tbl_LoginsSchema.ConfigUnassignedQue.FieldName, value);
			}
		}

		public virtual string s_Title
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginsSchema.Title.FieldName) ? string.Empty : base.GetStringAsString(tbl_LoginsSchema.Title.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginsSchema.Title.FieldName);
				else
					this.Title = base.SetStringAsString(tbl_LoginsSchema.Title.FieldName, value);
			}
		}

		public virtual string s_Phone
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginsSchema.Phone.FieldName) ? string.Empty : base.GetStringAsString(tbl_LoginsSchema.Phone.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginsSchema.Phone.FieldName);
				else
					this.Phone = base.SetStringAsString(tbl_LoginsSchema.Phone.FieldName, value);
			}
		}

		public virtual string s_MobilePhone
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginsSchema.MobilePhone.FieldName) ? string.Empty : base.GetStringAsString(tbl_LoginsSchema.MobilePhone.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginsSchema.MobilePhone.FieldName);
				else
					this.MobilePhone = base.SetStringAsString(tbl_LoginsSchema.MobilePhone.FieldName, value);
			}
		}

		public virtual string s_SintHourOffset
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginsSchema.SintHourOffset.FieldName) ? string.Empty : base.GetShortAsString(tbl_LoginsSchema.SintHourOffset.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginsSchema.SintHourOffset.FieldName);
				else
					this.SintHourOffset = base.SetShortAsString(tbl_LoginsSchema.SintHourOffset.FieldName, value);
			}
		}

		public virtual string s_TintDateFormat
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginsSchema.TintDateFormat.FieldName) ? string.Empty : base.GetByteAsString(tbl_LoginsSchema.TintDateFormat.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginsSchema.TintDateFormat.FieldName);
				else
					this.TintDateFormat = base.SetByteAsString(tbl_LoginsSchema.TintDateFormat.FieldName, value);
			}
		}

		public virtual string s_Guid
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginsSchema.Guid.FieldName) ? string.Empty : base.GetGuidAsString(tbl_LoginsSchema.Guid.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginsSchema.Guid.FieldName);
				else
					this.Guid = base.SetGuidAsString(tbl_LoginsSchema.Guid.FieldName, value);
			}
		}

		public virtual string s_DtUTCUpdated
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginsSchema.DtUTCUpdated.FieldName) ? string.Empty : base.GetDateTimeAsString(tbl_LoginsSchema.DtUTCUpdated.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginsSchema.DtUTCUpdated.FieldName);
				else
					this.DtUTCUpdated = base.SetDateTimeAsString(tbl_LoginsSchema.DtUTCUpdated.FieldName, value);
			}
		}

		public virtual string s_LdapUserSID
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginsSchema.LdapUserSID.FieldName) ? string.Empty : base.GetStringAsString(tbl_LoginsSchema.LdapUserSID.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginsSchema.LdapUserSID.FieldName);
				else
					this.LdapUserSID = base.SetStringAsString(tbl_LoginsSchema.LdapUserSID.FieldName, value);
			}
		}

		public virtual string s_LdapUserAccount
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginsSchema.LdapUserAccount.FieldName) ? string.Empty : base.GetStringAsString(tbl_LoginsSchema.LdapUserAccount.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginsSchema.LdapUserAccount.FieldName);
				else
					this.LdapUserAccount = base.SetStringAsString(tbl_LoginsSchema.LdapUserAccount.FieldName, value);
			}
		}


		#endregion		
	
		#region Where Clause
		public class WhereClause
		{
			public WhereClause(EasyObject entity)
			{
				this._entity = entity;
			}
			
			public TearOffWhereParameter TearOff
			{
				get
				{
					if(_tearOff == null)
					{
						_tearOff = new TearOffWhereParameter(this);
					}

					return _tearOff;
				}
			}

			#region TearOff's
			public class TearOffWhereParameter
			{
				public TearOffWhereParameter(WhereClause clause)
				{
					this._clause = clause;
				}
				
				
				public WhereParameter Id
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginsSchema.Id);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter Email
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginsSchema.Email);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter FirstName
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginsSchema.FirstName);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter LastName
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginsSchema.LastName);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter Password
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginsSchema.Password);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter ConfigUnassignedQue
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginsSchema.ConfigUnassignedQue);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter Title
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginsSchema.Title);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter Phone
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginsSchema.Phone);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter MobilePhone
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginsSchema.MobilePhone);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter SintHourOffset
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginsSchema.SintHourOffset);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter TintDateFormat
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginsSchema.TintDateFormat);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter Guid
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginsSchema.Guid);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter DtUTCUpdated
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginsSchema.DtUTCUpdated);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter LdapUserSID
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginsSchema.LdapUserSID);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter LdapUserAccount
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginsSchema.LdapUserAccount);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}


				private WhereClause _clause;
			}
			#endregion
		
			public WhereParameter Id
		    {
				get
		        {
					if(_Id_W == null)
	        	    {
						_Id_W = TearOff.Id;
					}
					return _Id_W;
				}
			}

			public WhereParameter Email
		    {
				get
		        {
					if(_Email_W == null)
	        	    {
						_Email_W = TearOff.Email;
					}
					return _Email_W;
				}
			}

			public WhereParameter FirstName
		    {
				get
		        {
					if(_FirstName_W == null)
	        	    {
						_FirstName_W = TearOff.FirstName;
					}
					return _FirstName_W;
				}
			}

			public WhereParameter LastName
		    {
				get
		        {
					if(_LastName_W == null)
	        	    {
						_LastName_W = TearOff.LastName;
					}
					return _LastName_W;
				}
			}

			public WhereParameter Password
		    {
				get
		        {
					if(_Password_W == null)
	        	    {
						_Password_W = TearOff.Password;
					}
					return _Password_W;
				}
			}

			public WhereParameter ConfigUnassignedQue
		    {
				get
		        {
					if(_ConfigUnassignedQue_W == null)
	        	    {
						_ConfigUnassignedQue_W = TearOff.ConfigUnassignedQue;
					}
					return _ConfigUnassignedQue_W;
				}
			}

			public WhereParameter Title
		    {
				get
		        {
					if(_Title_W == null)
	        	    {
						_Title_W = TearOff.Title;
					}
					return _Title_W;
				}
			}

			public WhereParameter Phone
		    {
				get
		        {
					if(_Phone_W == null)
	        	    {
						_Phone_W = TearOff.Phone;
					}
					return _Phone_W;
				}
			}

			public WhereParameter MobilePhone
		    {
				get
		        {
					if(_MobilePhone_W == null)
	        	    {
						_MobilePhone_W = TearOff.MobilePhone;
					}
					return _MobilePhone_W;
				}
			}

			public WhereParameter SintHourOffset
		    {
				get
		        {
					if(_SintHourOffset_W == null)
	        	    {
						_SintHourOffset_W = TearOff.SintHourOffset;
					}
					return _SintHourOffset_W;
				}
			}

			public WhereParameter TintDateFormat
		    {
				get
		        {
					if(_TintDateFormat_W == null)
	        	    {
						_TintDateFormat_W = TearOff.TintDateFormat;
					}
					return _TintDateFormat_W;
				}
			}

			public WhereParameter Guid
		    {
				get
		        {
					if(_Guid_W == null)
	        	    {
						_Guid_W = TearOff.Guid;
					}
					return _Guid_W;
				}
			}

			public WhereParameter DtUTCUpdated
		    {
				get
		        {
					if(_DtUTCUpdated_W == null)
	        	    {
						_DtUTCUpdated_W = TearOff.DtUTCUpdated;
					}
					return _DtUTCUpdated_W;
				}
			}

			public WhereParameter LdapUserSID
		    {
				get
		        {
					if(_LdapUserSID_W == null)
	        	    {
						_LdapUserSID_W = TearOff.LdapUserSID;
					}
					return _LdapUserSID_W;
				}
			}

			public WhereParameter LdapUserAccount
		    {
				get
		        {
					if(_LdapUserAccount_W == null)
	        	    {
						_LdapUserAccount_W = TearOff.LdapUserAccount;
					}
					return _LdapUserAccount_W;
				}
			}

			private WhereParameter _Id_W = null;
			private WhereParameter _Email_W = null;
			private WhereParameter _FirstName_W = null;
			private WhereParameter _LastName_W = null;
			private WhereParameter _Password_W = null;
			private WhereParameter _ConfigUnassignedQue_W = null;
			private WhereParameter _Title_W = null;
			private WhereParameter _Phone_W = null;
			private WhereParameter _MobilePhone_W = null;
			private WhereParameter _SintHourOffset_W = null;
			private WhereParameter _TintDateFormat_W = null;
			private WhereParameter _Guid_W = null;
			private WhereParameter _DtUTCUpdated_W = null;
			private WhereParameter _LdapUserSID_W = null;
			private WhereParameter _LdapUserAccount_W = null;

			public void WhereClauseReset()
			{
				_Id_W = null;
				_Email_W = null;
				_FirstName_W = null;
				_LastName_W = null;
				_Password_W = null;
				_ConfigUnassignedQue_W = null;
				_Title_W = null;
				_Phone_W = null;
				_MobilePhone_W = null;
				_SintHourOffset_W = null;
				_TintDateFormat_W = null;
				_Guid_W = null;
				_DtUTCUpdated_W = null;
				_LdapUserSID_W = null;
				_LdapUserAccount_W = null;

				this._entity.Query.FlushWhereParameters();

			}
	
			private EasyObject _entity;
			private TearOffWhereParameter _tearOff;
			
		}
	
		public WhereClause Where
		{
			get
			{
				if(_whereClause == null)
				{
					_whereClause = new WhereClause(this);
				}
		
				return _whereClause;
			}
		}
		
		private WhereClause _whereClause = null;	
		#endregion
		
		#region Aggregate Clause
		public class AggregateClause
		{
			public AggregateClause(EasyObject entity)
			{
				this._entity = entity;
			}
			
			public TearOffAggregateParameter TearOff
			{
				get
				{
					if(_tearOff == null)
					{
						_tearOff = new TearOffAggregateParameter(this);
					}

					return _tearOff;
				}
			}

			#region TearOff's
			public class TearOffAggregateParameter
			{
				public TearOffAggregateParameter(AggregateClause clause)
				{
					this._clause = clause;
				}
				
				
				public AggregateParameter Id
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginsSchema.Id);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter Email
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginsSchema.Email);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter FirstName
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginsSchema.FirstName);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter LastName
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginsSchema.LastName);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter Password
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginsSchema.Password);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter ConfigUnassignedQue
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginsSchema.ConfigUnassignedQue);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter Title
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginsSchema.Title);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter Phone
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginsSchema.Phone);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter MobilePhone
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginsSchema.MobilePhone);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter SintHourOffset
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginsSchema.SintHourOffset);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter TintDateFormat
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginsSchema.TintDateFormat);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter Guid
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginsSchema.Guid);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter DtUTCUpdated
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginsSchema.DtUTCUpdated);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter LdapUserSID
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginsSchema.LdapUserSID);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter LdapUserAccount
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginsSchema.LdapUserAccount);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}


				private AggregateClause _clause;
			}
			#endregion
		
			public AggregateParameter Id
		    {
				get
		        {
					if(_Id_W == null)
	        	    {
						_Id_W = TearOff.Id;
					}
					return _Id_W;
				}
			}

			public AggregateParameter Email
		    {
				get
		        {
					if(_Email_W == null)
	        	    {
						_Email_W = TearOff.Email;
					}
					return _Email_W;
				}
			}

			public AggregateParameter FirstName
		    {
				get
		        {
					if(_FirstName_W == null)
	        	    {
						_FirstName_W = TearOff.FirstName;
					}
					return _FirstName_W;
				}
			}

			public AggregateParameter LastName
		    {
				get
		        {
					if(_LastName_W == null)
	        	    {
						_LastName_W = TearOff.LastName;
					}
					return _LastName_W;
				}
			}

			public AggregateParameter Password
		    {
				get
		        {
					if(_Password_W == null)
	        	    {
						_Password_W = TearOff.Password;
					}
					return _Password_W;
				}
			}

			public AggregateParameter ConfigUnassignedQue
		    {
				get
		        {
					if(_ConfigUnassignedQue_W == null)
	        	    {
						_ConfigUnassignedQue_W = TearOff.ConfigUnassignedQue;
					}
					return _ConfigUnassignedQue_W;
				}
			}

			public AggregateParameter Title
		    {
				get
		        {
					if(_Title_W == null)
	        	    {
						_Title_W = TearOff.Title;
					}
					return _Title_W;
				}
			}

			public AggregateParameter Phone
		    {
				get
		        {
					if(_Phone_W == null)
	        	    {
						_Phone_W = TearOff.Phone;
					}
					return _Phone_W;
				}
			}

			public AggregateParameter MobilePhone
		    {
				get
		        {
					if(_MobilePhone_W == null)
	        	    {
						_MobilePhone_W = TearOff.MobilePhone;
					}
					return _MobilePhone_W;
				}
			}

			public AggregateParameter SintHourOffset
		    {
				get
		        {
					if(_SintHourOffset_W == null)
	        	    {
						_SintHourOffset_W = TearOff.SintHourOffset;
					}
					return _SintHourOffset_W;
				}
			}

			public AggregateParameter TintDateFormat
		    {
				get
		        {
					if(_TintDateFormat_W == null)
	        	    {
						_TintDateFormat_W = TearOff.TintDateFormat;
					}
					return _TintDateFormat_W;
				}
			}

			public AggregateParameter Guid
		    {
				get
		        {
					if(_Guid_W == null)
	        	    {
						_Guid_W = TearOff.Guid;
					}
					return _Guid_W;
				}
			}

			public AggregateParameter DtUTCUpdated
		    {
				get
		        {
					if(_DtUTCUpdated_W == null)
	        	    {
						_DtUTCUpdated_W = TearOff.DtUTCUpdated;
					}
					return _DtUTCUpdated_W;
				}
			}

			public AggregateParameter LdapUserSID
		    {
				get
		        {
					if(_LdapUserSID_W == null)
	        	    {
						_LdapUserSID_W = TearOff.LdapUserSID;
					}
					return _LdapUserSID_W;
				}
			}

			public AggregateParameter LdapUserAccount
		    {
				get
		        {
					if(_LdapUserAccount_W == null)
	        	    {
						_LdapUserAccount_W = TearOff.LdapUserAccount;
					}
					return _LdapUserAccount_W;
				}
			}

			private AggregateParameter _Id_W = null;
			private AggregateParameter _Email_W = null;
			private AggregateParameter _FirstName_W = null;
			private AggregateParameter _LastName_W = null;
			private AggregateParameter _Password_W = null;
			private AggregateParameter _ConfigUnassignedQue_W = null;
			private AggregateParameter _Title_W = null;
			private AggregateParameter _Phone_W = null;
			private AggregateParameter _MobilePhone_W = null;
			private AggregateParameter _SintHourOffset_W = null;
			private AggregateParameter _TintDateFormat_W = null;
			private AggregateParameter _Guid_W = null;
			private AggregateParameter _DtUTCUpdated_W = null;
			private AggregateParameter _LdapUserSID_W = null;
			private AggregateParameter _LdapUserAccount_W = null;

			public void AggregateClauseReset()
			{
				_Id_W = null;
				_Email_W = null;
				_FirstName_W = null;
				_LastName_W = null;
				_Password_W = null;
				_ConfigUnassignedQue_W = null;
				_Title_W = null;
				_Phone_W = null;
				_MobilePhone_W = null;
				_SintHourOffset_W = null;
				_TintDateFormat_W = null;
				_Guid_W = null;
				_DtUTCUpdated_W = null;
				_LdapUserSID_W = null;
				_LdapUserAccount_W = null;

				this._entity.Query.FlushAggregateParameters();

			}
	
			private EasyObject _entity;
			private TearOffAggregateParameter _tearOff;
			
		}
	
		public AggregateClause Aggregate
		{
			get
			{
				if(_aggregateClause == null)
				{
					_aggregateClause = new AggregateClause(this);
				}
		
				return _aggregateClause;
			}
		}
		
		private AggregateClause _aggregateClause = null;	
		#endregion
	}
}
