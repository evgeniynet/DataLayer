/*
'===============================================================================
'  Generated From - CSharp_EasyObject_BusinessEntity.vbgen
' 
'  ** IMPORTANT  ** 
'  How to Generate your stored procedures:
' 
'  SQL      = SQL_DAAB_StoredProcs.vbgen
'  
'  This object is 'abstract' which means you need to inherit from it to be able
'  to instantiate it.  This is very easily done. You can override properties and
'  methods in your derived class, this allows you to regenerate this class at any
'  time and not worry about overwriting custom code. 
'
'  NEVER EDIT THIS FILE.
'
'  public class YourObject :  _YourObject
'  {
'
'  }
'
'===============================================================================
*/

// Generated by MyGeneration Version # (1.3.0.3)

using System;
using System.Data;
using System.Data.Common;
using System.Configuration;
using System.Collections;
using System.Collections.Specialized;
using System.Xml;
using System.IO;

using Microsoft.Practices.EnterpriseLibrary.Data;
using NCI.EasyObjects;

namespace BWA.bigWebDesk.DAL
{

	#region Schema

	public class tbl_LoginCompanyJuncSchema : NCI.EasyObjects.Schema
	{
		private static ArrayList _entries;
		public static SchemaItem Id = new SchemaItem("id", DbType.Int32, true, false, false, true, true, false);
		public static SchemaItem Login_id = new SchemaItem("login_id", DbType.Int32, false, false, false, false, true, false);
		public static SchemaItem Company_id = new SchemaItem("company_id", DbType.Int32, false, false, false, false, true, false);
		public static SchemaItem Location_id = new SchemaItem("location_id", DbType.Int32, false, true, false, false, false, false);
		public static SchemaItem UserType_Id = new SchemaItem("UserType_Id", DbType.Int32, false, false, false, false, true, true);
		public static SchemaItem Room = new SchemaItem("Room", DbType.AnsiString, SchemaItemJustify.None, 30, true, false, false, false);
		public static SchemaItem CheckinStatus = new SchemaItem("CheckinStatus", DbType.Boolean, false, false, false, false, false, true);
		public static SchemaItem Notes = new SchemaItem("Notes", DbType.AnsiString, SchemaItemJustify.None, 2147483647, true, false, false, false);
		public static SchemaItem QueEmailAddress = new SchemaItem("QueEmailAddress", DbType.AnsiString, SchemaItemJustify.None, 255, true, false, false, false);
		public static SchemaItem DtLastLogin = new SchemaItem("dtLastLogin", DbType.DateTime, false, true, false, false, false, false);
		public static SchemaItem ConfigHourlyRate = new SchemaItem("configHourlyRate", DbType.Currency, false, false, false, false, false, true);
		public static SchemaItem ConfigPartialSetup = new SchemaItem("configPartialSetup", DbType.Boolean, false, false, false, false, false, true);
		public static SchemaItem ConfigEmailNewTicket = new SchemaItem("configEmailNewTicket", DbType.Boolean, false, false, false, false, false, true);
		public static SchemaItem ConfigEmailTicketResponse = new SchemaItem("configEmailTicketResponse", DbType.Boolean, false, false, false, false, false, true);
		public static SchemaItem ConfigEmailUserTicketResponse = new SchemaItem("configEmailUserTicketResponse", DbType.Boolean, false, false, false, false, false, true);
		public static SchemaItem ConfigEmailUserNewTicket = new SchemaItem("configEmailUserNewTicket", DbType.Boolean, false, false, false, false, false, true);
		public static SchemaItem BitAllowQueEmailParsing = new SchemaItem("bitAllowQueEmailParsing", DbType.Boolean, false, false, false, false, false, true);
		public static SchemaItem Token = new SchemaItem("Token", DbType.Int64, false, true, false, false, false, false);
		public static SchemaItem TintLevel = new SchemaItem("tintLevel", DbType.Byte, false, true, false, false, true, false);
		public static SchemaItem SupGroupId = new SchemaItem("SupGroupId", DbType.Int32, false, true, false, false, true, false);
		public static SchemaItem IntAccountId = new SchemaItem("intAccountId", DbType.Int32, false, true, false, false, false, false);
		public static SchemaItem IntAcctLocationId = new SchemaItem("intAcctLocationId", DbType.Int32, false, true, false, false, false, false);
		public static SchemaItem BtCfgCCRep = new SchemaItem("btCfgCCRep", DbType.Boolean, false, false, false, false, false, true);
		public static SchemaItem VchOrganization = new SchemaItem("vchOrganization", DbType.AnsiString, SchemaItemJustify.None, 50, true, false, false, false);
		public static SchemaItem BtGlobalFilterEnabled = new SchemaItem("btGlobalFilterEnabled", DbType.Boolean, false, false, false, false, false, true);
		public static SchemaItem BtLimitToAssignedTkts = new SchemaItem("btLimitToAssignedTkts", DbType.Boolean, false, false, false, false, false, true);
		public static SchemaItem BtDisabledReports = new SchemaItem("btDisabledReports", DbType.Boolean, false, false, false, false, false, true);
		public static SchemaItem BtUserInactive = new SchemaItem("btUserInactive", DbType.Boolean, false, false, false, false, false, true);
		public static SchemaItem PrintFontSize = new SchemaItem("printFontSize", DbType.Byte, false, true, false, false, false, false);
		public static SchemaItem AccountLocationId = new SchemaItem("AccountLocationId", DbType.Int32, false, true, false, false, false, false);
		public static SchemaItem CreationCatId = new SchemaItem("CreationCatId", DbType.Int32, false, true, false, false, false, false);
		public static SchemaItem LocationId = new SchemaItem("LocationId", DbType.Int32, false, true, false, false, false, false);
		public static SchemaItem TintTicketTimer = new SchemaItem("tintTicketTimer", DbType.Byte, false, true, false, false, false, false);

		public override ArrayList SchemaEntries
		{
			get
			{
				if (_entries == null )
				{
					_entries = new ArrayList();
					_entries.Add(tbl_LoginCompanyJuncSchema.Id);
					_entries.Add(tbl_LoginCompanyJuncSchema.Login_id);
					_entries.Add(tbl_LoginCompanyJuncSchema.Company_id);
					_entries.Add(tbl_LoginCompanyJuncSchema.Location_id);
					_entries.Add(tbl_LoginCompanyJuncSchema.UserType_Id);
					_entries.Add(tbl_LoginCompanyJuncSchema.Room);
					_entries.Add(tbl_LoginCompanyJuncSchema.CheckinStatus);
					_entries.Add(tbl_LoginCompanyJuncSchema.Notes);
					_entries.Add(tbl_LoginCompanyJuncSchema.QueEmailAddress);
					_entries.Add(tbl_LoginCompanyJuncSchema.DtLastLogin);
					_entries.Add(tbl_LoginCompanyJuncSchema.ConfigHourlyRate);
					_entries.Add(tbl_LoginCompanyJuncSchema.ConfigPartialSetup);
					_entries.Add(tbl_LoginCompanyJuncSchema.ConfigEmailNewTicket);
					_entries.Add(tbl_LoginCompanyJuncSchema.ConfigEmailTicketResponse);
					_entries.Add(tbl_LoginCompanyJuncSchema.ConfigEmailUserTicketResponse);
					_entries.Add(tbl_LoginCompanyJuncSchema.ConfigEmailUserNewTicket);
					_entries.Add(tbl_LoginCompanyJuncSchema.BitAllowQueEmailParsing);
					_entries.Add(tbl_LoginCompanyJuncSchema.Token);
					_entries.Add(tbl_LoginCompanyJuncSchema.TintLevel);
					_entries.Add(tbl_LoginCompanyJuncSchema.SupGroupId);
					_entries.Add(tbl_LoginCompanyJuncSchema.IntAccountId);
					_entries.Add(tbl_LoginCompanyJuncSchema.IntAcctLocationId);
					_entries.Add(tbl_LoginCompanyJuncSchema.BtCfgCCRep);
					_entries.Add(tbl_LoginCompanyJuncSchema.VchOrganization);
					_entries.Add(tbl_LoginCompanyJuncSchema.BtGlobalFilterEnabled);
					_entries.Add(tbl_LoginCompanyJuncSchema.BtLimitToAssignedTkts);
					_entries.Add(tbl_LoginCompanyJuncSchema.BtDisabledReports);
					_entries.Add(tbl_LoginCompanyJuncSchema.BtUserInactive);
					_entries.Add(tbl_LoginCompanyJuncSchema.PrintFontSize);
					_entries.Add(tbl_LoginCompanyJuncSchema.AccountLocationId);
					_entries.Add(tbl_LoginCompanyJuncSchema.CreationCatId);
					_entries.Add(tbl_LoginCompanyJuncSchema.LocationId);
					_entries.Add(tbl_LoginCompanyJuncSchema.TintTicketTimer);
				}
				return _entries;
			}
		}
	}
	#endregion

	public abstract class tbl_LoginCompanyJunc : EasyObject
	{

		public tbl_LoginCompanyJunc()
		{
			tbl_LoginCompanyJuncSchema _schema = new tbl_LoginCompanyJuncSchema();
			this.SchemaEntries = _schema.SchemaEntries;
			this.SchemaGlobal = "dbo";
		}
		
		public override void FlushData() 	 
		{ 	 
			this._whereClause = null; 	 
			this._aggregateClause = null; 	 
			base.FlushData(); 	 
		}
			   
		/// <summary>
		/// Loads the business object with info from the database, based on the requested primary key.
		/// </summary>
		/// <param name="Id"></param>
		/// <returns>A Boolean indicating success or failure of the query</returns>
		public bool LoadByPrimaryKey(int Id)
		{
			switch(this.DefaultCommandType)
			{
				case CommandType.StoredProcedure:
					ListDictionary parameters = new ListDictionary();

					// Add in parameters
					parameters.Add(tbl_LoginCompanyJuncSchema.Id.FieldName, Id);

					return base.LoadFromSql(this.SchemaStoredProcedureWithSeparator + "Gettbl_LoginCompanyJunc", parameters, CommandType.StoredProcedure);

				case CommandType.Text:
					this.Query.ClearAll();
					this.Where.WhereClauseReset();
					this.Where.Id.Value = Id;
					return this.Query.Load();

				default:
					throw new ArgumentException("Invalid CommandType", "commandType");
			}
		}
	
		/// <summary>
		/// Loads all records from the table.
		/// </summary>
		/// <returns>A Boolean indicating success or failure of the query</returns>
		public bool LoadAll()
		{
			switch(this.DefaultCommandType)
			{
				case CommandType.StoredProcedure:
					return base.LoadFromSql(this.SchemaStoredProcedureWithSeparator + "GetAlltbl_LoginCompanyJunc", null, CommandType.StoredProcedure);

				case CommandType.Text:
					this.Query.ClearAll();
					this.Where.WhereClauseReset();
					return this.Query.Load();

				default:
					throw new ArgumentException("Invalid CommandType", "commandType");
			}
		}

		/// <summary>
		/// Adds a new record to the internal table.
		/// </summary>
		public override void AddNew()
		{
			base.AddNew();
		}

		protected override DbCommand GetInsertCommand(CommandType commandType)
		{	
			DbCommand dbCommand;

			// Create the Database object, using the default database service. The
			// default database service is determined through configuration.
			Database db = GetDatabase();

			switch(commandType)
			{
				case CommandType.StoredProcedure:
					string sqlCommand = this.SchemaStoredProcedureWithSeparator + "Addtbl_LoginCompanyJunc";
					dbCommand = db.GetStoredProcCommand(sqlCommand);

					db.AddParameter(dbCommand, "id", DbType.Int32, 0, ParameterDirection.Output, true, 0, 0, "id", DataRowVersion.Default, Convert.DBNull);
					CreateParameters(db, dbCommand);
					
					return dbCommand;

				case CommandType.Text:
					this.Query.ClearAll();
					this.Where.WhereClauseReset();
					foreach(SchemaItem item in this.SchemaEntries)
					{
						if (!(item.IsAutoKey || item.IsComputed))
						{
							this.Query.AddInsertColumn(item);
						}
					}
					dbCommand = this.Query.GetInsertCommandWrapper();

					dbCommand.Parameters.Clear();
					CreateParameters(db, dbCommand);
					db.AddParameter(dbCommand, "id", DbType.Int32, 0, ParameterDirection.Output, true, 0, 0, "id", DataRowVersion.Default, Convert.DBNull);
					
					return dbCommand;

				default:
					throw new ArgumentException("Invalid CommandType", "commandType");
			}
		}

		protected override DbCommand GetUpdateCommand(CommandType commandType)
		{
            DbCommand dbCommand;

			// Create the Database object, using the default database service. The
			// default database service is determined through configuration.
			Database db = GetDatabase();

			switch(commandType)
			{
				case CommandType.StoredProcedure:
					string sqlCommand = this.SchemaStoredProcedureWithSeparator + "Updatetbl_LoginCompanyJunc";
					dbCommand = db.GetStoredProcCommand(sqlCommand);

					db.AddInParameter(dbCommand, "id", DbType.Int32, "id", DataRowVersion.Current);
					CreateParameters(db, dbCommand);
					
					return dbCommand;

				case CommandType.Text:
					this.Query.ClearAll();
					foreach(SchemaItem item in this.SchemaEntries)
					{
						if (!(item.IsAutoKey || item.IsComputed))
						{
							this.Query.AddUpdateColumn(item);
						}
					}

					this.Where.WhereClauseReset();
					this.Where.Id.Operator = WhereParameter.Operand.Equal;
					dbCommand = this.Query.GetUpdateCommandWrapper();

					dbCommand.Parameters.Clear();
					CreateParameters(db, dbCommand);
					db.AddInParameter(dbCommand, "id", DbType.Int32, "id", DataRowVersion.Current);
					
					return dbCommand;

				default:
					throw new ArgumentException("Invalid CommandType", "commandType");
			}
		}

		protected override DbCommand GetDeleteCommand(CommandType commandType)
		{
            DbCommand dbCommand;

			// Create the Database object, using the default database service. The
			// default database service is determined through configuration.
			Database db = GetDatabase();

			switch(commandType)
			{
				case CommandType.StoredProcedure:
					string sqlCommand = this.SchemaStoredProcedureWithSeparator + "Deletetbl_LoginCompanyJunc";
					dbCommand = db.GetStoredProcCommand(sqlCommand);
					db.AddInParameter(dbCommand, "id", DbType.Int32, "id", DataRowVersion.Current);
					
					return dbCommand;

				case CommandType.Text:
					this.Query.ClearAll();
					this.Where.WhereClauseReset();
					this.Where.Id.Operator = WhereParameter.Operand.Equal;
					dbCommand = this.Query.GetDeleteCommandWrapper();

					dbCommand.Parameters.Clear();
					db.AddInParameter(dbCommand, "id", DbType.Int32, "id", DataRowVersion.Current);
					
					return dbCommand;

				default:
					throw new ArgumentException("Invalid CommandType", "commandType");
			}
		}

		private void CreateParameters(Database db, DbCommand dbCommand)
		{
			db.AddInParameter(dbCommand, "login_id", DbType.Int32, "login_id", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "company_id", DbType.Int32, "company_id", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "location_id", DbType.Int32, "location_id", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "UserType_Id", DbType.Int32, "UserType_Id", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "Room", DbType.AnsiString, "Room", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "CheckinStatus", DbType.Boolean, "CheckinStatus", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "Notes", DbType.AnsiString, "Notes", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "QueEmailAddress", DbType.AnsiString, "QueEmailAddress", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "dtLastLogin", DbType.DateTime, "dtLastLogin", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "configHourlyRate", DbType.Currency, "configHourlyRate", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "configPartialSetup", DbType.Boolean, "configPartialSetup", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "configEmailNewTicket", DbType.Boolean, "configEmailNewTicket", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "configEmailTicketResponse", DbType.Boolean, "configEmailTicketResponse", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "configEmailUserTicketResponse", DbType.Boolean, "configEmailUserTicketResponse", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "configEmailUserNewTicket", DbType.Boolean, "configEmailUserNewTicket", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "bitAllowQueEmailParsing", DbType.Boolean, "bitAllowQueEmailParsing", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "Token", DbType.Int64, "Token", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "tintLevel", DbType.Byte, "tintLevel", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "SupGroupId", DbType.Int32, "SupGroupId", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "intAccountId", DbType.Int32, "intAccountId", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "intAcctLocationId", DbType.Int32, "intAcctLocationId", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "btCfgCCRep", DbType.Boolean, "btCfgCCRep", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "vchOrganization", DbType.AnsiString, "vchOrganization", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "btGlobalFilterEnabled", DbType.Boolean, "btGlobalFilterEnabled", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "btLimitToAssignedTkts", DbType.Boolean, "btLimitToAssignedTkts", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "btDisabledReports", DbType.Boolean, "btDisabledReports", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "btUserInactive", DbType.Boolean, "btUserInactive", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "printFontSize", DbType.Byte, "printFontSize", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "AccountLocationId", DbType.Int32, "AccountLocationId", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "CreationCatId", DbType.Int32, "CreationCatId", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "LocationId", DbType.Int32, "LocationId", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "tintTicketTimer", DbType.Byte, "tintTicketTimer", DataRowVersion.Current);
		}
		
		#region Properties
		public virtual int Id
		{
			get
			{
				return this.GetInteger(tbl_LoginCompanyJuncSchema.Id.FieldName);
	    	}
			set
			{
				this.SetInteger(tbl_LoginCompanyJuncSchema.Id.FieldName, value);
			}
		}
		public virtual int Login_id
		{
			get
			{
				return this.GetInteger(tbl_LoginCompanyJuncSchema.Login_id.FieldName);
	    	}
			set
			{
				this.SetInteger(tbl_LoginCompanyJuncSchema.Login_id.FieldName, value);
			}
		}
		public virtual int Company_id
		{
			get
			{
				return this.GetInteger(tbl_LoginCompanyJuncSchema.Company_id.FieldName);
	    	}
			set
			{
				this.SetInteger(tbl_LoginCompanyJuncSchema.Company_id.FieldName, value);
			}
		}
		public virtual int Location_id
		{
			get
			{
				return this.GetInteger(tbl_LoginCompanyJuncSchema.Location_id.FieldName);
	    	}
			set
			{
				this.SetInteger(tbl_LoginCompanyJuncSchema.Location_id.FieldName, value);
			}
		}
		public virtual int UserType_Id
		{
			get
			{
				return this.GetInteger(tbl_LoginCompanyJuncSchema.UserType_Id.FieldName);
	    	}
			set
			{
				this.SetInteger(tbl_LoginCompanyJuncSchema.UserType_Id.FieldName, value);
			}
		}
		public virtual string Room
		{
			get
			{
				return this.GetString(tbl_LoginCompanyJuncSchema.Room.FieldName);
	    	}
			set
			{
				this.SetString(tbl_LoginCompanyJuncSchema.Room.FieldName, value);
			}
		}
		public virtual bool CheckinStatus
		{
			get
			{
				return this.GetBoolean(tbl_LoginCompanyJuncSchema.CheckinStatus.FieldName);
	    	}
			set
			{
				this.SetBoolean(tbl_LoginCompanyJuncSchema.CheckinStatus.FieldName, value);
			}
		}
		public virtual string Notes
		{
			get
			{
				return this.GetString(tbl_LoginCompanyJuncSchema.Notes.FieldName);
	    	}
			set
			{
				this.SetString(tbl_LoginCompanyJuncSchema.Notes.FieldName, value);
			}
		}
		public virtual string QueEmailAddress
		{
			get
			{
				return this.GetString(tbl_LoginCompanyJuncSchema.QueEmailAddress.FieldName);
	    	}
			set
			{
				this.SetString(tbl_LoginCompanyJuncSchema.QueEmailAddress.FieldName, value);
			}
		}
		public virtual DateTime DtLastLogin
		{
			get
			{
				return this.GetDateTime(tbl_LoginCompanyJuncSchema.DtLastLogin.FieldName);
	    	}
			set
			{
				this.SetDateTime(tbl_LoginCompanyJuncSchema.DtLastLogin.FieldName, value);
			}
		}
		public virtual decimal ConfigHourlyRate
		{
			get
			{
				return this.GetDecimal(tbl_LoginCompanyJuncSchema.ConfigHourlyRate.FieldName);
	    	}
			set
			{
				this.SetDecimal(tbl_LoginCompanyJuncSchema.ConfigHourlyRate.FieldName, value);
			}
		}
		public virtual bool ConfigPartialSetup
		{
			get
			{
				return this.GetBoolean(tbl_LoginCompanyJuncSchema.ConfigPartialSetup.FieldName);
	    	}
			set
			{
				this.SetBoolean(tbl_LoginCompanyJuncSchema.ConfigPartialSetup.FieldName, value);
			}
		}
		public virtual bool ConfigEmailNewTicket
		{
			get
			{
				return this.GetBoolean(tbl_LoginCompanyJuncSchema.ConfigEmailNewTicket.FieldName);
	    	}
			set
			{
				this.SetBoolean(tbl_LoginCompanyJuncSchema.ConfigEmailNewTicket.FieldName, value);
			}
		}
		public virtual bool ConfigEmailTicketResponse
		{
			get
			{
				return this.GetBoolean(tbl_LoginCompanyJuncSchema.ConfigEmailTicketResponse.FieldName);
	    	}
			set
			{
				this.SetBoolean(tbl_LoginCompanyJuncSchema.ConfigEmailTicketResponse.FieldName, value);
			}
		}
		public virtual bool ConfigEmailUserTicketResponse
		{
			get
			{
				return this.GetBoolean(tbl_LoginCompanyJuncSchema.ConfigEmailUserTicketResponse.FieldName);
	    	}
			set
			{
				this.SetBoolean(tbl_LoginCompanyJuncSchema.ConfigEmailUserTicketResponse.FieldName, value);
			}
		}
		public virtual bool ConfigEmailUserNewTicket
		{
			get
			{
				return this.GetBoolean(tbl_LoginCompanyJuncSchema.ConfigEmailUserNewTicket.FieldName);
	    	}
			set
			{
				this.SetBoolean(tbl_LoginCompanyJuncSchema.ConfigEmailUserNewTicket.FieldName, value);
			}
		}
		public virtual bool BitAllowQueEmailParsing
		{
			get
			{
				return this.GetBoolean(tbl_LoginCompanyJuncSchema.BitAllowQueEmailParsing.FieldName);
	    	}
			set
			{
				this.SetBoolean(tbl_LoginCompanyJuncSchema.BitAllowQueEmailParsing.FieldName, value);
			}
		}
		public virtual long Token
		{
			get
			{
				return this.GetLong(tbl_LoginCompanyJuncSchema.Token.FieldName);
	    	}
			set
			{
				this.SetLong(tbl_LoginCompanyJuncSchema.Token.FieldName, value);
			}
		}
		public virtual byte TintLevel
		{
			get
			{
				return this.GetByte(tbl_LoginCompanyJuncSchema.TintLevel.FieldName);
	    	}
			set
			{
				this.SetByte(tbl_LoginCompanyJuncSchema.TintLevel.FieldName, value);
			}
		}
		public virtual int SupGroupId
		{
			get
			{
				return this.GetInteger(tbl_LoginCompanyJuncSchema.SupGroupId.FieldName);
	    	}
			set
			{
				this.SetInteger(tbl_LoginCompanyJuncSchema.SupGroupId.FieldName, value);
			}
		}
		public virtual int IntAccountId
		{
			get
			{
				return this.GetInteger(tbl_LoginCompanyJuncSchema.IntAccountId.FieldName);
	    	}
			set
			{
				this.SetInteger(tbl_LoginCompanyJuncSchema.IntAccountId.FieldName, value);
			}
		}
		public virtual int IntAcctLocationId
		{
			get
			{
				return this.GetInteger(tbl_LoginCompanyJuncSchema.IntAcctLocationId.FieldName);
	    	}
			set
			{
				this.SetInteger(tbl_LoginCompanyJuncSchema.IntAcctLocationId.FieldName, value);
			}
		}
		public virtual bool BtCfgCCRep
		{
			get
			{
				return this.GetBoolean(tbl_LoginCompanyJuncSchema.BtCfgCCRep.FieldName);
	    	}
			set
			{
				this.SetBoolean(tbl_LoginCompanyJuncSchema.BtCfgCCRep.FieldName, value);
			}
		}
		public virtual string VchOrganization
		{
			get
			{
				return this.GetString(tbl_LoginCompanyJuncSchema.VchOrganization.FieldName);
	    	}
			set
			{
				this.SetString(tbl_LoginCompanyJuncSchema.VchOrganization.FieldName, value);
			}
		}
		public virtual bool BtGlobalFilterEnabled
		{
			get
			{
				return this.GetBoolean(tbl_LoginCompanyJuncSchema.BtGlobalFilterEnabled.FieldName);
	    	}
			set
			{
				this.SetBoolean(tbl_LoginCompanyJuncSchema.BtGlobalFilterEnabled.FieldName, value);
			}
		}
		public virtual bool BtLimitToAssignedTkts
		{
			get
			{
				return this.GetBoolean(tbl_LoginCompanyJuncSchema.BtLimitToAssignedTkts.FieldName);
	    	}
			set
			{
				this.SetBoolean(tbl_LoginCompanyJuncSchema.BtLimitToAssignedTkts.FieldName, value);
			}
		}
		public virtual bool BtDisabledReports
		{
			get
			{
				return this.GetBoolean(tbl_LoginCompanyJuncSchema.BtDisabledReports.FieldName);
	    	}
			set
			{
				this.SetBoolean(tbl_LoginCompanyJuncSchema.BtDisabledReports.FieldName, value);
			}
		}
		public virtual bool BtUserInactive
		{
			get
			{
				return this.GetBoolean(tbl_LoginCompanyJuncSchema.BtUserInactive.FieldName);
	    	}
			set
			{
				this.SetBoolean(tbl_LoginCompanyJuncSchema.BtUserInactive.FieldName, value);
			}
		}
		public virtual byte PrintFontSize
		{
			get
			{
				return this.GetByte(tbl_LoginCompanyJuncSchema.PrintFontSize.FieldName);
	    	}
			set
			{
				this.SetByte(tbl_LoginCompanyJuncSchema.PrintFontSize.FieldName, value);
			}
		}
		public virtual int AccountLocationId
		{
			get
			{
				return this.GetInteger(tbl_LoginCompanyJuncSchema.AccountLocationId.FieldName);
	    	}
			set
			{
				this.SetInteger(tbl_LoginCompanyJuncSchema.AccountLocationId.FieldName, value);
			}
		}
		public virtual int CreationCatId
		{
			get
			{
				return this.GetInteger(tbl_LoginCompanyJuncSchema.CreationCatId.FieldName);
	    	}
			set
			{
				this.SetInteger(tbl_LoginCompanyJuncSchema.CreationCatId.FieldName, value);
			}
		}
		public virtual int LocationId
		{
			get
			{
				return this.GetInteger(tbl_LoginCompanyJuncSchema.LocationId.FieldName);
	    	}
			set
			{
				this.SetInteger(tbl_LoginCompanyJuncSchema.LocationId.FieldName, value);
			}
		}
		public virtual byte TintTicketTimer
		{
			get
			{
				return this.GetByte(tbl_LoginCompanyJuncSchema.TintTicketTimer.FieldName);
	    	}
			set
			{
				this.SetByte(tbl_LoginCompanyJuncSchema.TintTicketTimer.FieldName, value);
			}
		}

		public override string TableName
		{
			get { return "tbl_LoginCompanyJunc"; }
		}
		
		#endregion		
		
		#region String Properties
	
		public virtual string s_Id
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginCompanyJuncSchema.Id.FieldName) ? string.Empty : base.GetIntegerAsString(tbl_LoginCompanyJuncSchema.Id.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginCompanyJuncSchema.Id.FieldName);
				else
					this.Id = base.SetIntegerAsString(tbl_LoginCompanyJuncSchema.Id.FieldName, value);
			}
		}

		public virtual string s_Login_id
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginCompanyJuncSchema.Login_id.FieldName) ? string.Empty : base.GetIntegerAsString(tbl_LoginCompanyJuncSchema.Login_id.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginCompanyJuncSchema.Login_id.FieldName);
				else
					this.Login_id = base.SetIntegerAsString(tbl_LoginCompanyJuncSchema.Login_id.FieldName, value);
			}
		}

		public virtual string s_Company_id
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginCompanyJuncSchema.Company_id.FieldName) ? string.Empty : base.GetIntegerAsString(tbl_LoginCompanyJuncSchema.Company_id.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginCompanyJuncSchema.Company_id.FieldName);
				else
					this.Company_id = base.SetIntegerAsString(tbl_LoginCompanyJuncSchema.Company_id.FieldName, value);
			}
		}

		public virtual string s_Location_id
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginCompanyJuncSchema.Location_id.FieldName) ? string.Empty : base.GetIntegerAsString(tbl_LoginCompanyJuncSchema.Location_id.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginCompanyJuncSchema.Location_id.FieldName);
				else
					this.Location_id = base.SetIntegerAsString(tbl_LoginCompanyJuncSchema.Location_id.FieldName, value);
			}
		}

		public virtual string s_UserType_Id
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginCompanyJuncSchema.UserType_Id.FieldName) ? string.Empty : base.GetIntegerAsString(tbl_LoginCompanyJuncSchema.UserType_Id.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginCompanyJuncSchema.UserType_Id.FieldName);
				else
					this.UserType_Id = base.SetIntegerAsString(tbl_LoginCompanyJuncSchema.UserType_Id.FieldName, value);
			}
		}

		public virtual string s_Room
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginCompanyJuncSchema.Room.FieldName) ? string.Empty : base.GetStringAsString(tbl_LoginCompanyJuncSchema.Room.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginCompanyJuncSchema.Room.FieldName);
				else
					this.Room = base.SetStringAsString(tbl_LoginCompanyJuncSchema.Room.FieldName, value);
			}
		}

		public virtual string s_CheckinStatus
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginCompanyJuncSchema.CheckinStatus.FieldName) ? string.Empty : base.GetBooleanAsString(tbl_LoginCompanyJuncSchema.CheckinStatus.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginCompanyJuncSchema.CheckinStatus.FieldName);
				else
					this.CheckinStatus = base.SetBooleanAsString(tbl_LoginCompanyJuncSchema.CheckinStatus.FieldName, value);
			}
		}

		public virtual string s_Notes
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginCompanyJuncSchema.Notes.FieldName) ? string.Empty : base.GetStringAsString(tbl_LoginCompanyJuncSchema.Notes.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginCompanyJuncSchema.Notes.FieldName);
				else
					this.Notes = base.SetStringAsString(tbl_LoginCompanyJuncSchema.Notes.FieldName, value);
			}
		}

		public virtual string s_QueEmailAddress
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginCompanyJuncSchema.QueEmailAddress.FieldName) ? string.Empty : base.GetStringAsString(tbl_LoginCompanyJuncSchema.QueEmailAddress.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginCompanyJuncSchema.QueEmailAddress.FieldName);
				else
					this.QueEmailAddress = base.SetStringAsString(tbl_LoginCompanyJuncSchema.QueEmailAddress.FieldName, value);
			}
		}

		public virtual string s_DtLastLogin
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginCompanyJuncSchema.DtLastLogin.FieldName) ? string.Empty : base.GetDateTimeAsString(tbl_LoginCompanyJuncSchema.DtLastLogin.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginCompanyJuncSchema.DtLastLogin.FieldName);
				else
					this.DtLastLogin = base.SetDateTimeAsString(tbl_LoginCompanyJuncSchema.DtLastLogin.FieldName, value);
			}
		}

		public virtual string s_ConfigHourlyRate
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginCompanyJuncSchema.ConfigHourlyRate.FieldName) ? string.Empty : base.GetDecimalAsString(tbl_LoginCompanyJuncSchema.ConfigHourlyRate.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginCompanyJuncSchema.ConfigHourlyRate.FieldName);
				else
					this.ConfigHourlyRate = base.SetDecimalAsString(tbl_LoginCompanyJuncSchema.ConfigHourlyRate.FieldName, value);
			}
		}

		public virtual string s_ConfigPartialSetup
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginCompanyJuncSchema.ConfigPartialSetup.FieldName) ? string.Empty : base.GetBooleanAsString(tbl_LoginCompanyJuncSchema.ConfigPartialSetup.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginCompanyJuncSchema.ConfigPartialSetup.FieldName);
				else
					this.ConfigPartialSetup = base.SetBooleanAsString(tbl_LoginCompanyJuncSchema.ConfigPartialSetup.FieldName, value);
			}
		}

		public virtual string s_ConfigEmailNewTicket
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginCompanyJuncSchema.ConfigEmailNewTicket.FieldName) ? string.Empty : base.GetBooleanAsString(tbl_LoginCompanyJuncSchema.ConfigEmailNewTicket.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginCompanyJuncSchema.ConfigEmailNewTicket.FieldName);
				else
					this.ConfigEmailNewTicket = base.SetBooleanAsString(tbl_LoginCompanyJuncSchema.ConfigEmailNewTicket.FieldName, value);
			}
		}

		public virtual string s_ConfigEmailTicketResponse
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginCompanyJuncSchema.ConfigEmailTicketResponse.FieldName) ? string.Empty : base.GetBooleanAsString(tbl_LoginCompanyJuncSchema.ConfigEmailTicketResponse.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginCompanyJuncSchema.ConfigEmailTicketResponse.FieldName);
				else
					this.ConfigEmailTicketResponse = base.SetBooleanAsString(tbl_LoginCompanyJuncSchema.ConfigEmailTicketResponse.FieldName, value);
			}
		}

		public virtual string s_ConfigEmailUserTicketResponse
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginCompanyJuncSchema.ConfigEmailUserTicketResponse.FieldName) ? string.Empty : base.GetBooleanAsString(tbl_LoginCompanyJuncSchema.ConfigEmailUserTicketResponse.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginCompanyJuncSchema.ConfigEmailUserTicketResponse.FieldName);
				else
					this.ConfigEmailUserTicketResponse = base.SetBooleanAsString(tbl_LoginCompanyJuncSchema.ConfigEmailUserTicketResponse.FieldName, value);
			}
		}

		public virtual string s_ConfigEmailUserNewTicket
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginCompanyJuncSchema.ConfigEmailUserNewTicket.FieldName) ? string.Empty : base.GetBooleanAsString(tbl_LoginCompanyJuncSchema.ConfigEmailUserNewTicket.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginCompanyJuncSchema.ConfigEmailUserNewTicket.FieldName);
				else
					this.ConfigEmailUserNewTicket = base.SetBooleanAsString(tbl_LoginCompanyJuncSchema.ConfigEmailUserNewTicket.FieldName, value);
			}
		}

		public virtual string s_BitAllowQueEmailParsing
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginCompanyJuncSchema.BitAllowQueEmailParsing.FieldName) ? string.Empty : base.GetBooleanAsString(tbl_LoginCompanyJuncSchema.BitAllowQueEmailParsing.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginCompanyJuncSchema.BitAllowQueEmailParsing.FieldName);
				else
					this.BitAllowQueEmailParsing = base.SetBooleanAsString(tbl_LoginCompanyJuncSchema.BitAllowQueEmailParsing.FieldName, value);
			}
		}

		public virtual string s_Token
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginCompanyJuncSchema.Token.FieldName) ? string.Empty : base.GetLongAsString(tbl_LoginCompanyJuncSchema.Token.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginCompanyJuncSchema.Token.FieldName);
				else
					this.Token = base.SetLongAsString(tbl_LoginCompanyJuncSchema.Token.FieldName, value);
			}
		}

		public virtual string s_TintLevel
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginCompanyJuncSchema.TintLevel.FieldName) ? string.Empty : base.GetByteAsString(tbl_LoginCompanyJuncSchema.TintLevel.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginCompanyJuncSchema.TintLevel.FieldName);
				else
					this.TintLevel = base.SetByteAsString(tbl_LoginCompanyJuncSchema.TintLevel.FieldName, value);
			}
		}

		public virtual string s_SupGroupId
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginCompanyJuncSchema.SupGroupId.FieldName) ? string.Empty : base.GetIntegerAsString(tbl_LoginCompanyJuncSchema.SupGroupId.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginCompanyJuncSchema.SupGroupId.FieldName);
				else
					this.SupGroupId = base.SetIntegerAsString(tbl_LoginCompanyJuncSchema.SupGroupId.FieldName, value);
			}
		}

		public virtual string s_IntAccountId
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginCompanyJuncSchema.IntAccountId.FieldName) ? string.Empty : base.GetIntegerAsString(tbl_LoginCompanyJuncSchema.IntAccountId.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginCompanyJuncSchema.IntAccountId.FieldName);
				else
					this.IntAccountId = base.SetIntegerAsString(tbl_LoginCompanyJuncSchema.IntAccountId.FieldName, value);
			}
		}

		public virtual string s_IntAcctLocationId
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginCompanyJuncSchema.IntAcctLocationId.FieldName) ? string.Empty : base.GetIntegerAsString(tbl_LoginCompanyJuncSchema.IntAcctLocationId.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginCompanyJuncSchema.IntAcctLocationId.FieldName);
				else
					this.IntAcctLocationId = base.SetIntegerAsString(tbl_LoginCompanyJuncSchema.IntAcctLocationId.FieldName, value);
			}
		}

		public virtual string s_BtCfgCCRep
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginCompanyJuncSchema.BtCfgCCRep.FieldName) ? string.Empty : base.GetBooleanAsString(tbl_LoginCompanyJuncSchema.BtCfgCCRep.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginCompanyJuncSchema.BtCfgCCRep.FieldName);
				else
					this.BtCfgCCRep = base.SetBooleanAsString(tbl_LoginCompanyJuncSchema.BtCfgCCRep.FieldName, value);
			}
		}

		public virtual string s_VchOrganization
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginCompanyJuncSchema.VchOrganization.FieldName) ? string.Empty : base.GetStringAsString(tbl_LoginCompanyJuncSchema.VchOrganization.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginCompanyJuncSchema.VchOrganization.FieldName);
				else
					this.VchOrganization = base.SetStringAsString(tbl_LoginCompanyJuncSchema.VchOrganization.FieldName, value);
			}
		}

		public virtual string s_BtGlobalFilterEnabled
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginCompanyJuncSchema.BtGlobalFilterEnabled.FieldName) ? string.Empty : base.GetBooleanAsString(tbl_LoginCompanyJuncSchema.BtGlobalFilterEnabled.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginCompanyJuncSchema.BtGlobalFilterEnabled.FieldName);
				else
					this.BtGlobalFilterEnabled = base.SetBooleanAsString(tbl_LoginCompanyJuncSchema.BtGlobalFilterEnabled.FieldName, value);
			}
		}

		public virtual string s_BtLimitToAssignedTkts
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginCompanyJuncSchema.BtLimitToAssignedTkts.FieldName) ? string.Empty : base.GetBooleanAsString(tbl_LoginCompanyJuncSchema.BtLimitToAssignedTkts.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginCompanyJuncSchema.BtLimitToAssignedTkts.FieldName);
				else
					this.BtLimitToAssignedTkts = base.SetBooleanAsString(tbl_LoginCompanyJuncSchema.BtLimitToAssignedTkts.FieldName, value);
			}
		}

		public virtual string s_BtDisabledReports
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginCompanyJuncSchema.BtDisabledReports.FieldName) ? string.Empty : base.GetBooleanAsString(tbl_LoginCompanyJuncSchema.BtDisabledReports.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginCompanyJuncSchema.BtDisabledReports.FieldName);
				else
					this.BtDisabledReports = base.SetBooleanAsString(tbl_LoginCompanyJuncSchema.BtDisabledReports.FieldName, value);
			}
		}

		public virtual string s_BtUserInactive
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginCompanyJuncSchema.BtUserInactive.FieldName) ? string.Empty : base.GetBooleanAsString(tbl_LoginCompanyJuncSchema.BtUserInactive.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginCompanyJuncSchema.BtUserInactive.FieldName);
				else
					this.BtUserInactive = base.SetBooleanAsString(tbl_LoginCompanyJuncSchema.BtUserInactive.FieldName, value);
			}
		}

		public virtual string s_PrintFontSize
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginCompanyJuncSchema.PrintFontSize.FieldName) ? string.Empty : base.GetByteAsString(tbl_LoginCompanyJuncSchema.PrintFontSize.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginCompanyJuncSchema.PrintFontSize.FieldName);
				else
					this.PrintFontSize = base.SetByteAsString(tbl_LoginCompanyJuncSchema.PrintFontSize.FieldName, value);
			}
		}

		public virtual string s_AccountLocationId
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginCompanyJuncSchema.AccountLocationId.FieldName) ? string.Empty : base.GetIntegerAsString(tbl_LoginCompanyJuncSchema.AccountLocationId.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginCompanyJuncSchema.AccountLocationId.FieldName);
				else
					this.AccountLocationId = base.SetIntegerAsString(tbl_LoginCompanyJuncSchema.AccountLocationId.FieldName, value);
			}
		}

		public virtual string s_CreationCatId
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginCompanyJuncSchema.CreationCatId.FieldName) ? string.Empty : base.GetIntegerAsString(tbl_LoginCompanyJuncSchema.CreationCatId.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginCompanyJuncSchema.CreationCatId.FieldName);
				else
					this.CreationCatId = base.SetIntegerAsString(tbl_LoginCompanyJuncSchema.CreationCatId.FieldName, value);
			}
		}

		public virtual string s_LocationId
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginCompanyJuncSchema.LocationId.FieldName) ? string.Empty : base.GetIntegerAsString(tbl_LoginCompanyJuncSchema.LocationId.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginCompanyJuncSchema.LocationId.FieldName);
				else
					this.LocationId = base.SetIntegerAsString(tbl_LoginCompanyJuncSchema.LocationId.FieldName, value);
			}
		}

		public virtual string s_TintTicketTimer
	    {
			get
	        {
				return this.IsColumnNull(tbl_LoginCompanyJuncSchema.TintTicketTimer.FieldName) ? string.Empty : base.GetByteAsString(tbl_LoginCompanyJuncSchema.TintTicketTimer.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(tbl_LoginCompanyJuncSchema.TintTicketTimer.FieldName);
				else
					this.TintTicketTimer = base.SetByteAsString(tbl_LoginCompanyJuncSchema.TintTicketTimer.FieldName, value);
			}
		}


		#endregion		
	
		#region Where Clause
		public class WhereClause
		{
			public WhereClause(EasyObject entity)
			{
				this._entity = entity;
			}
			
			public TearOffWhereParameter TearOff
			{
				get
				{
					if(_tearOff == null)
					{
						_tearOff = new TearOffWhereParameter(this);
					}

					return _tearOff;
				}
			}

			#region TearOff's
			public class TearOffWhereParameter
			{
				public TearOffWhereParameter(WhereClause clause)
				{
					this._clause = clause;
				}
				
				
				public WhereParameter Id
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginCompanyJuncSchema.Id);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter Login_id
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginCompanyJuncSchema.Login_id);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter Company_id
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginCompanyJuncSchema.Company_id);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter Location_id
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginCompanyJuncSchema.Location_id);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter UserType_Id
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginCompanyJuncSchema.UserType_Id);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter Room
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginCompanyJuncSchema.Room);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter CheckinStatus
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginCompanyJuncSchema.CheckinStatus);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter Notes
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginCompanyJuncSchema.Notes);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter QueEmailAddress
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginCompanyJuncSchema.QueEmailAddress);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter DtLastLogin
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginCompanyJuncSchema.DtLastLogin);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter ConfigHourlyRate
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginCompanyJuncSchema.ConfigHourlyRate);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter ConfigPartialSetup
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginCompanyJuncSchema.ConfigPartialSetup);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter ConfigEmailNewTicket
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginCompanyJuncSchema.ConfigEmailNewTicket);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter ConfigEmailTicketResponse
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginCompanyJuncSchema.ConfigEmailTicketResponse);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter ConfigEmailUserTicketResponse
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginCompanyJuncSchema.ConfigEmailUserTicketResponse);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter ConfigEmailUserNewTicket
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginCompanyJuncSchema.ConfigEmailUserNewTicket);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter BitAllowQueEmailParsing
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginCompanyJuncSchema.BitAllowQueEmailParsing);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter Token
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginCompanyJuncSchema.Token);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter TintLevel
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginCompanyJuncSchema.TintLevel);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter SupGroupId
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginCompanyJuncSchema.SupGroupId);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter IntAccountId
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginCompanyJuncSchema.IntAccountId);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter IntAcctLocationId
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginCompanyJuncSchema.IntAcctLocationId);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter BtCfgCCRep
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginCompanyJuncSchema.BtCfgCCRep);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter VchOrganization
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginCompanyJuncSchema.VchOrganization);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter BtGlobalFilterEnabled
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginCompanyJuncSchema.BtGlobalFilterEnabled);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter BtLimitToAssignedTkts
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginCompanyJuncSchema.BtLimitToAssignedTkts);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter BtDisabledReports
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginCompanyJuncSchema.BtDisabledReports);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter BtUserInactive
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginCompanyJuncSchema.BtUserInactive);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter PrintFontSize
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginCompanyJuncSchema.PrintFontSize);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter AccountLocationId
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginCompanyJuncSchema.AccountLocationId);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter CreationCatId
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginCompanyJuncSchema.CreationCatId);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter LocationId
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginCompanyJuncSchema.LocationId);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter TintTicketTimer
				{
					get
					{
							WhereParameter wp = new WhereParameter(tbl_LoginCompanyJuncSchema.TintTicketTimer);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}


				private WhereClause _clause;
			}
			#endregion
		
			public WhereParameter Id
		    {
				get
		        {
					if(_Id_W == null)
	        	    {
						_Id_W = TearOff.Id;
					}
					return _Id_W;
				}
			}

			public WhereParameter Login_id
		    {
				get
		        {
					if(_Login_id_W == null)
	        	    {
						_Login_id_W = TearOff.Login_id;
					}
					return _Login_id_W;
				}
			}

			public WhereParameter Company_id
		    {
				get
		        {
					if(_Company_id_W == null)
	        	    {
						_Company_id_W = TearOff.Company_id;
					}
					return _Company_id_W;
				}
			}

			public WhereParameter Location_id
		    {
				get
		        {
					if(_Location_id_W == null)
	        	    {
						_Location_id_W = TearOff.Location_id;
					}
					return _Location_id_W;
				}
			}

			public WhereParameter UserType_Id
		    {
				get
		        {
					if(_UserType_Id_W == null)
	        	    {
						_UserType_Id_W = TearOff.UserType_Id;
					}
					return _UserType_Id_W;
				}
			}

			public WhereParameter Room
		    {
				get
		        {
					if(_Room_W == null)
	        	    {
						_Room_W = TearOff.Room;
					}
					return _Room_W;
				}
			}

			public WhereParameter CheckinStatus
		    {
				get
		        {
					if(_CheckinStatus_W == null)
	        	    {
						_CheckinStatus_W = TearOff.CheckinStatus;
					}
					return _CheckinStatus_W;
				}
			}

			public WhereParameter Notes
		    {
				get
		        {
					if(_Notes_W == null)
	        	    {
						_Notes_W = TearOff.Notes;
					}
					return _Notes_W;
				}
			}

			public WhereParameter QueEmailAddress
		    {
				get
		        {
					if(_QueEmailAddress_W == null)
	        	    {
						_QueEmailAddress_W = TearOff.QueEmailAddress;
					}
					return _QueEmailAddress_W;
				}
			}

			public WhereParameter DtLastLogin
		    {
				get
		        {
					if(_DtLastLogin_W == null)
	        	    {
						_DtLastLogin_W = TearOff.DtLastLogin;
					}
					return _DtLastLogin_W;
				}
			}

			public WhereParameter ConfigHourlyRate
		    {
				get
		        {
					if(_ConfigHourlyRate_W == null)
	        	    {
						_ConfigHourlyRate_W = TearOff.ConfigHourlyRate;
					}
					return _ConfigHourlyRate_W;
				}
			}

			public WhereParameter ConfigPartialSetup
		    {
				get
		        {
					if(_ConfigPartialSetup_W == null)
	        	    {
						_ConfigPartialSetup_W = TearOff.ConfigPartialSetup;
					}
					return _ConfigPartialSetup_W;
				}
			}

			public WhereParameter ConfigEmailNewTicket
		    {
				get
		        {
					if(_ConfigEmailNewTicket_W == null)
	        	    {
						_ConfigEmailNewTicket_W = TearOff.ConfigEmailNewTicket;
					}
					return _ConfigEmailNewTicket_W;
				}
			}

			public WhereParameter ConfigEmailTicketResponse
		    {
				get
		        {
					if(_ConfigEmailTicketResponse_W == null)
	        	    {
						_ConfigEmailTicketResponse_W = TearOff.ConfigEmailTicketResponse;
					}
					return _ConfigEmailTicketResponse_W;
				}
			}

			public WhereParameter ConfigEmailUserTicketResponse
		    {
				get
		        {
					if(_ConfigEmailUserTicketResponse_W == null)
	        	    {
						_ConfigEmailUserTicketResponse_W = TearOff.ConfigEmailUserTicketResponse;
					}
					return _ConfigEmailUserTicketResponse_W;
				}
			}

			public WhereParameter ConfigEmailUserNewTicket
		    {
				get
		        {
					if(_ConfigEmailUserNewTicket_W == null)
	        	    {
						_ConfigEmailUserNewTicket_W = TearOff.ConfigEmailUserNewTicket;
					}
					return _ConfigEmailUserNewTicket_W;
				}
			}

			public WhereParameter BitAllowQueEmailParsing
		    {
				get
		        {
					if(_BitAllowQueEmailParsing_W == null)
	        	    {
						_BitAllowQueEmailParsing_W = TearOff.BitAllowQueEmailParsing;
					}
					return _BitAllowQueEmailParsing_W;
				}
			}

			public WhereParameter Token
		    {
				get
		        {
					if(_Token_W == null)
	        	    {
						_Token_W = TearOff.Token;
					}
					return _Token_W;
				}
			}

			public WhereParameter TintLevel
		    {
				get
		        {
					if(_TintLevel_W == null)
	        	    {
						_TintLevel_W = TearOff.TintLevel;
					}
					return _TintLevel_W;
				}
			}

			public WhereParameter SupGroupId
		    {
				get
		        {
					if(_SupGroupId_W == null)
	        	    {
						_SupGroupId_W = TearOff.SupGroupId;
					}
					return _SupGroupId_W;
				}
			}

			public WhereParameter IntAccountId
		    {
				get
		        {
					if(_IntAccountId_W == null)
	        	    {
						_IntAccountId_W = TearOff.IntAccountId;
					}
					return _IntAccountId_W;
				}
			}

			public WhereParameter IntAcctLocationId
		    {
				get
		        {
					if(_IntAcctLocationId_W == null)
	        	    {
						_IntAcctLocationId_W = TearOff.IntAcctLocationId;
					}
					return _IntAcctLocationId_W;
				}
			}

			public WhereParameter BtCfgCCRep
		    {
				get
		        {
					if(_BtCfgCCRep_W == null)
	        	    {
						_BtCfgCCRep_W = TearOff.BtCfgCCRep;
					}
					return _BtCfgCCRep_W;
				}
			}

			public WhereParameter VchOrganization
		    {
				get
		        {
					if(_VchOrganization_W == null)
	        	    {
						_VchOrganization_W = TearOff.VchOrganization;
					}
					return _VchOrganization_W;
				}
			}

			public WhereParameter BtGlobalFilterEnabled
		    {
				get
		        {
					if(_BtGlobalFilterEnabled_W == null)
	        	    {
						_BtGlobalFilterEnabled_W = TearOff.BtGlobalFilterEnabled;
					}
					return _BtGlobalFilterEnabled_W;
				}
			}

			public WhereParameter BtLimitToAssignedTkts
		    {
				get
		        {
					if(_BtLimitToAssignedTkts_W == null)
	        	    {
						_BtLimitToAssignedTkts_W = TearOff.BtLimitToAssignedTkts;
					}
					return _BtLimitToAssignedTkts_W;
				}
			}

			public WhereParameter BtDisabledReports
		    {
				get
		        {
					if(_BtDisabledReports_W == null)
	        	    {
						_BtDisabledReports_W = TearOff.BtDisabledReports;
					}
					return _BtDisabledReports_W;
				}
			}

			public WhereParameter BtUserInactive
		    {
				get
		        {
					if(_BtUserInactive_W == null)
	        	    {
						_BtUserInactive_W = TearOff.BtUserInactive;
					}
					return _BtUserInactive_W;
				}
			}

			public WhereParameter PrintFontSize
		    {
				get
		        {
					if(_PrintFontSize_W == null)
	        	    {
						_PrintFontSize_W = TearOff.PrintFontSize;
					}
					return _PrintFontSize_W;
				}
			}

			public WhereParameter AccountLocationId
		    {
				get
		        {
					if(_AccountLocationId_W == null)
	        	    {
						_AccountLocationId_W = TearOff.AccountLocationId;
					}
					return _AccountLocationId_W;
				}
			}

			public WhereParameter CreationCatId
		    {
				get
		        {
					if(_CreationCatId_W == null)
	        	    {
						_CreationCatId_W = TearOff.CreationCatId;
					}
					return _CreationCatId_W;
				}
			}

			public WhereParameter LocationId
		    {
				get
		        {
					if(_LocationId_W == null)
	        	    {
						_LocationId_W = TearOff.LocationId;
					}
					return _LocationId_W;
				}
			}

			public WhereParameter TintTicketTimer
		    {
				get
		        {
					if(_TintTicketTimer_W == null)
	        	    {
						_TintTicketTimer_W = TearOff.TintTicketTimer;
					}
					return _TintTicketTimer_W;
				}
			}

			private WhereParameter _Id_W = null;
			private WhereParameter _Login_id_W = null;
			private WhereParameter _Company_id_W = null;
			private WhereParameter _Location_id_W = null;
			private WhereParameter _UserType_Id_W = null;
			private WhereParameter _Room_W = null;
			private WhereParameter _CheckinStatus_W = null;
			private WhereParameter _Notes_W = null;
			private WhereParameter _QueEmailAddress_W = null;
			private WhereParameter _DtLastLogin_W = null;
			private WhereParameter _ConfigHourlyRate_W = null;
			private WhereParameter _ConfigPartialSetup_W = null;
			private WhereParameter _ConfigEmailNewTicket_W = null;
			private WhereParameter _ConfigEmailTicketResponse_W = null;
			private WhereParameter _ConfigEmailUserTicketResponse_W = null;
			private WhereParameter _ConfigEmailUserNewTicket_W = null;
			private WhereParameter _BitAllowQueEmailParsing_W = null;
			private WhereParameter _Token_W = null;
			private WhereParameter _TintLevel_W = null;
			private WhereParameter _SupGroupId_W = null;
			private WhereParameter _IntAccountId_W = null;
			private WhereParameter _IntAcctLocationId_W = null;
			private WhereParameter _BtCfgCCRep_W = null;
			private WhereParameter _VchOrganization_W = null;
			private WhereParameter _BtGlobalFilterEnabled_W = null;
			private WhereParameter _BtLimitToAssignedTkts_W = null;
			private WhereParameter _BtDisabledReports_W = null;
			private WhereParameter _BtUserInactive_W = null;
			private WhereParameter _PrintFontSize_W = null;
			private WhereParameter _AccountLocationId_W = null;
			private WhereParameter _CreationCatId_W = null;
			private WhereParameter _LocationId_W = null;
			private WhereParameter _TintTicketTimer_W = null;

			public void WhereClauseReset()
			{
				_Id_W = null;
				_Login_id_W = null;
				_Company_id_W = null;
				_Location_id_W = null;
				_UserType_Id_W = null;
				_Room_W = null;
				_CheckinStatus_W = null;
				_Notes_W = null;
				_QueEmailAddress_W = null;
				_DtLastLogin_W = null;
				_ConfigHourlyRate_W = null;
				_ConfigPartialSetup_W = null;
				_ConfigEmailNewTicket_W = null;
				_ConfigEmailTicketResponse_W = null;
				_ConfigEmailUserTicketResponse_W = null;
				_ConfigEmailUserNewTicket_W = null;
				_BitAllowQueEmailParsing_W = null;
				_Token_W = null;
				_TintLevel_W = null;
				_SupGroupId_W = null;
				_IntAccountId_W = null;
				_IntAcctLocationId_W = null;
				_BtCfgCCRep_W = null;
				_VchOrganization_W = null;
				_BtGlobalFilterEnabled_W = null;
				_BtLimitToAssignedTkts_W = null;
				_BtDisabledReports_W = null;
				_BtUserInactive_W = null;
				_PrintFontSize_W = null;
				_AccountLocationId_W = null;
				_CreationCatId_W = null;
				_LocationId_W = null;
				_TintTicketTimer_W = null;

				this._entity.Query.FlushWhereParameters();

			}
	
			private EasyObject _entity;
			private TearOffWhereParameter _tearOff;
			
		}
	
		public WhereClause Where
		{
			get
			{
				if(_whereClause == null)
				{
					_whereClause = new WhereClause(this);
				}
		
				return _whereClause;
			}
		}
		
		private WhereClause _whereClause = null;	
		#endregion
		
		#region Aggregate Clause
		public class AggregateClause
		{
			public AggregateClause(EasyObject entity)
			{
				this._entity = entity;
			}
			
			public TearOffAggregateParameter TearOff
			{
				get
				{
					if(_tearOff == null)
					{
						_tearOff = new TearOffAggregateParameter(this);
					}

					return _tearOff;
				}
			}

			#region TearOff's
			public class TearOffAggregateParameter
			{
				public TearOffAggregateParameter(AggregateClause clause)
				{
					this._clause = clause;
				}
				
				
				public AggregateParameter Id
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginCompanyJuncSchema.Id);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter Login_id
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginCompanyJuncSchema.Login_id);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter Company_id
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginCompanyJuncSchema.Company_id);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter Location_id
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginCompanyJuncSchema.Location_id);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter UserType_Id
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginCompanyJuncSchema.UserType_Id);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter Room
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginCompanyJuncSchema.Room);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter CheckinStatus
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginCompanyJuncSchema.CheckinStatus);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter Notes
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginCompanyJuncSchema.Notes);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter QueEmailAddress
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginCompanyJuncSchema.QueEmailAddress);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter DtLastLogin
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginCompanyJuncSchema.DtLastLogin);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter ConfigHourlyRate
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginCompanyJuncSchema.ConfigHourlyRate);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter ConfigPartialSetup
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginCompanyJuncSchema.ConfigPartialSetup);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter ConfigEmailNewTicket
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginCompanyJuncSchema.ConfigEmailNewTicket);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter ConfigEmailTicketResponse
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginCompanyJuncSchema.ConfigEmailTicketResponse);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter ConfigEmailUserTicketResponse
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginCompanyJuncSchema.ConfigEmailUserTicketResponse);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter ConfigEmailUserNewTicket
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginCompanyJuncSchema.ConfigEmailUserNewTicket);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter BitAllowQueEmailParsing
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginCompanyJuncSchema.BitAllowQueEmailParsing);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter Token
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginCompanyJuncSchema.Token);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter TintLevel
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginCompanyJuncSchema.TintLevel);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter SupGroupId
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginCompanyJuncSchema.SupGroupId);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter IntAccountId
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginCompanyJuncSchema.IntAccountId);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter IntAcctLocationId
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginCompanyJuncSchema.IntAcctLocationId);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter BtCfgCCRep
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginCompanyJuncSchema.BtCfgCCRep);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter VchOrganization
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginCompanyJuncSchema.VchOrganization);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter BtGlobalFilterEnabled
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginCompanyJuncSchema.BtGlobalFilterEnabled);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter BtLimitToAssignedTkts
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginCompanyJuncSchema.BtLimitToAssignedTkts);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter BtDisabledReports
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginCompanyJuncSchema.BtDisabledReports);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter BtUserInactive
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginCompanyJuncSchema.BtUserInactive);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter PrintFontSize
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginCompanyJuncSchema.PrintFontSize);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter AccountLocationId
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginCompanyJuncSchema.AccountLocationId);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter CreationCatId
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginCompanyJuncSchema.CreationCatId);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter LocationId
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginCompanyJuncSchema.LocationId);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter TintTicketTimer
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(tbl_LoginCompanyJuncSchema.TintTicketTimer);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}


				private AggregateClause _clause;
			}
			#endregion
		
			public AggregateParameter Id
		    {
				get
		        {
					if(_Id_W == null)
	        	    {
						_Id_W = TearOff.Id;
					}
					return _Id_W;
				}
			}

			public AggregateParameter Login_id
		    {
				get
		        {
					if(_Login_id_W == null)
	        	    {
						_Login_id_W = TearOff.Login_id;
					}
					return _Login_id_W;
				}
			}

			public AggregateParameter Company_id
		    {
				get
		        {
					if(_Company_id_W == null)
	        	    {
						_Company_id_W = TearOff.Company_id;
					}
					return _Company_id_W;
				}
			}

			public AggregateParameter Location_id
		    {
				get
		        {
					if(_Location_id_W == null)
	        	    {
						_Location_id_W = TearOff.Location_id;
					}
					return _Location_id_W;
				}
			}

			public AggregateParameter UserType_Id
		    {
				get
		        {
					if(_UserType_Id_W == null)
	        	    {
						_UserType_Id_W = TearOff.UserType_Id;
					}
					return _UserType_Id_W;
				}
			}

			public AggregateParameter Room
		    {
				get
		        {
					if(_Room_W == null)
	        	    {
						_Room_W = TearOff.Room;
					}
					return _Room_W;
				}
			}

			public AggregateParameter CheckinStatus
		    {
				get
		        {
					if(_CheckinStatus_W == null)
	        	    {
						_CheckinStatus_W = TearOff.CheckinStatus;
					}
					return _CheckinStatus_W;
				}
			}

			public AggregateParameter Notes
		    {
				get
		        {
					if(_Notes_W == null)
	        	    {
						_Notes_W = TearOff.Notes;
					}
					return _Notes_W;
				}
			}

			public AggregateParameter QueEmailAddress
		    {
				get
		        {
					if(_QueEmailAddress_W == null)
	        	    {
						_QueEmailAddress_W = TearOff.QueEmailAddress;
					}
					return _QueEmailAddress_W;
				}
			}

			public AggregateParameter DtLastLogin
		    {
				get
		        {
					if(_DtLastLogin_W == null)
	        	    {
						_DtLastLogin_W = TearOff.DtLastLogin;
					}
					return _DtLastLogin_W;
				}
			}

			public AggregateParameter ConfigHourlyRate
		    {
				get
		        {
					if(_ConfigHourlyRate_W == null)
	        	    {
						_ConfigHourlyRate_W = TearOff.ConfigHourlyRate;
					}
					return _ConfigHourlyRate_W;
				}
			}

			public AggregateParameter ConfigPartialSetup
		    {
				get
		        {
					if(_ConfigPartialSetup_W == null)
	        	    {
						_ConfigPartialSetup_W = TearOff.ConfigPartialSetup;
					}
					return _ConfigPartialSetup_W;
				}
			}

			public AggregateParameter ConfigEmailNewTicket
		    {
				get
		        {
					if(_ConfigEmailNewTicket_W == null)
	        	    {
						_ConfigEmailNewTicket_W = TearOff.ConfigEmailNewTicket;
					}
					return _ConfigEmailNewTicket_W;
				}
			}

			public AggregateParameter ConfigEmailTicketResponse
		    {
				get
		        {
					if(_ConfigEmailTicketResponse_W == null)
	        	    {
						_ConfigEmailTicketResponse_W = TearOff.ConfigEmailTicketResponse;
					}
					return _ConfigEmailTicketResponse_W;
				}
			}

			public AggregateParameter ConfigEmailUserTicketResponse
		    {
				get
		        {
					if(_ConfigEmailUserTicketResponse_W == null)
	        	    {
						_ConfigEmailUserTicketResponse_W = TearOff.ConfigEmailUserTicketResponse;
					}
					return _ConfigEmailUserTicketResponse_W;
				}
			}

			public AggregateParameter ConfigEmailUserNewTicket
		    {
				get
		        {
					if(_ConfigEmailUserNewTicket_W == null)
	        	    {
						_ConfigEmailUserNewTicket_W = TearOff.ConfigEmailUserNewTicket;
					}
					return _ConfigEmailUserNewTicket_W;
				}
			}

			public AggregateParameter BitAllowQueEmailParsing
		    {
				get
		        {
					if(_BitAllowQueEmailParsing_W == null)
	        	    {
						_BitAllowQueEmailParsing_W = TearOff.BitAllowQueEmailParsing;
					}
					return _BitAllowQueEmailParsing_W;
				}
			}

			public AggregateParameter Token
		    {
				get
		        {
					if(_Token_W == null)
	        	    {
						_Token_W = TearOff.Token;
					}
					return _Token_W;
				}
			}

			public AggregateParameter TintLevel
		    {
				get
		        {
					if(_TintLevel_W == null)
	        	    {
						_TintLevel_W = TearOff.TintLevel;
					}
					return _TintLevel_W;
				}
			}

			public AggregateParameter SupGroupId
		    {
				get
		        {
					if(_SupGroupId_W == null)
	        	    {
						_SupGroupId_W = TearOff.SupGroupId;
					}
					return _SupGroupId_W;
				}
			}

			public AggregateParameter IntAccountId
		    {
				get
		        {
					if(_IntAccountId_W == null)
	        	    {
						_IntAccountId_W = TearOff.IntAccountId;
					}
					return _IntAccountId_W;
				}
			}

			public AggregateParameter IntAcctLocationId
		    {
				get
		        {
					if(_IntAcctLocationId_W == null)
	        	    {
						_IntAcctLocationId_W = TearOff.IntAcctLocationId;
					}
					return _IntAcctLocationId_W;
				}
			}

			public AggregateParameter BtCfgCCRep
		    {
				get
		        {
					if(_BtCfgCCRep_W == null)
	        	    {
						_BtCfgCCRep_W = TearOff.BtCfgCCRep;
					}
					return _BtCfgCCRep_W;
				}
			}

			public AggregateParameter VchOrganization
		    {
				get
		        {
					if(_VchOrganization_W == null)
	        	    {
						_VchOrganization_W = TearOff.VchOrganization;
					}
					return _VchOrganization_W;
				}
			}

			public AggregateParameter BtGlobalFilterEnabled
		    {
				get
		        {
					if(_BtGlobalFilterEnabled_W == null)
	        	    {
						_BtGlobalFilterEnabled_W = TearOff.BtGlobalFilterEnabled;
					}
					return _BtGlobalFilterEnabled_W;
				}
			}

			public AggregateParameter BtLimitToAssignedTkts
		    {
				get
		        {
					if(_BtLimitToAssignedTkts_W == null)
	        	    {
						_BtLimitToAssignedTkts_W = TearOff.BtLimitToAssignedTkts;
					}
					return _BtLimitToAssignedTkts_W;
				}
			}

			public AggregateParameter BtDisabledReports
		    {
				get
		        {
					if(_BtDisabledReports_W == null)
	        	    {
						_BtDisabledReports_W = TearOff.BtDisabledReports;
					}
					return _BtDisabledReports_W;
				}
			}

			public AggregateParameter BtUserInactive
		    {
				get
		        {
					if(_BtUserInactive_W == null)
	        	    {
						_BtUserInactive_W = TearOff.BtUserInactive;
					}
					return _BtUserInactive_W;
				}
			}

			public AggregateParameter PrintFontSize
		    {
				get
		        {
					if(_PrintFontSize_W == null)
	        	    {
						_PrintFontSize_W = TearOff.PrintFontSize;
					}
					return _PrintFontSize_W;
				}
			}

			public AggregateParameter AccountLocationId
		    {
				get
		        {
					if(_AccountLocationId_W == null)
	        	    {
						_AccountLocationId_W = TearOff.AccountLocationId;
					}
					return _AccountLocationId_W;
				}
			}

			public AggregateParameter CreationCatId
		    {
				get
		        {
					if(_CreationCatId_W == null)
	        	    {
						_CreationCatId_W = TearOff.CreationCatId;
					}
					return _CreationCatId_W;
				}
			}

			public AggregateParameter LocationId
		    {
				get
		        {
					if(_LocationId_W == null)
	        	    {
						_LocationId_W = TearOff.LocationId;
					}
					return _LocationId_W;
				}
			}

			public AggregateParameter TintTicketTimer
		    {
				get
		        {
					if(_TintTicketTimer_W == null)
	        	    {
						_TintTicketTimer_W = TearOff.TintTicketTimer;
					}
					return _TintTicketTimer_W;
				}
			}

			private AggregateParameter _Id_W = null;
			private AggregateParameter _Login_id_W = null;
			private AggregateParameter _Company_id_W = null;
			private AggregateParameter _Location_id_W = null;
			private AggregateParameter _UserType_Id_W = null;
			private AggregateParameter _Room_W = null;
			private AggregateParameter _CheckinStatus_W = null;
			private AggregateParameter _Notes_W = null;
			private AggregateParameter _QueEmailAddress_W = null;
			private AggregateParameter _DtLastLogin_W = null;
			private AggregateParameter _ConfigHourlyRate_W = null;
			private AggregateParameter _ConfigPartialSetup_W = null;
			private AggregateParameter _ConfigEmailNewTicket_W = null;
			private AggregateParameter _ConfigEmailTicketResponse_W = null;
			private AggregateParameter _ConfigEmailUserTicketResponse_W = null;
			private AggregateParameter _ConfigEmailUserNewTicket_W = null;
			private AggregateParameter _BitAllowQueEmailParsing_W = null;
			private AggregateParameter _Token_W = null;
			private AggregateParameter _TintLevel_W = null;
			private AggregateParameter _SupGroupId_W = null;
			private AggregateParameter _IntAccountId_W = null;
			private AggregateParameter _IntAcctLocationId_W = null;
			private AggregateParameter _BtCfgCCRep_W = null;
			private AggregateParameter _VchOrganization_W = null;
			private AggregateParameter _BtGlobalFilterEnabled_W = null;
			private AggregateParameter _BtLimitToAssignedTkts_W = null;
			private AggregateParameter _BtDisabledReports_W = null;
			private AggregateParameter _BtUserInactive_W = null;
			private AggregateParameter _PrintFontSize_W = null;
			private AggregateParameter _AccountLocationId_W = null;
			private AggregateParameter _CreationCatId_W = null;
			private AggregateParameter _LocationId_W = null;
			private AggregateParameter _TintTicketTimer_W = null;

			public void AggregateClauseReset()
			{
				_Id_W = null;
				_Login_id_W = null;
				_Company_id_W = null;
				_Location_id_W = null;
				_UserType_Id_W = null;
				_Room_W = null;
				_CheckinStatus_W = null;
				_Notes_W = null;
				_QueEmailAddress_W = null;
				_DtLastLogin_W = null;
				_ConfigHourlyRate_W = null;
				_ConfigPartialSetup_W = null;
				_ConfigEmailNewTicket_W = null;
				_ConfigEmailTicketResponse_W = null;
				_ConfigEmailUserTicketResponse_W = null;
				_ConfigEmailUserNewTicket_W = null;
				_BitAllowQueEmailParsing_W = null;
				_Token_W = null;
				_TintLevel_W = null;
				_SupGroupId_W = null;
				_IntAccountId_W = null;
				_IntAcctLocationId_W = null;
				_BtCfgCCRep_W = null;
				_VchOrganization_W = null;
				_BtGlobalFilterEnabled_W = null;
				_BtLimitToAssignedTkts_W = null;
				_BtDisabledReports_W = null;
				_BtUserInactive_W = null;
				_PrintFontSize_W = null;
				_AccountLocationId_W = null;
				_CreationCatId_W = null;
				_LocationId_W = null;
				_TintTicketTimer_W = null;

				this._entity.Query.FlushAggregateParameters();

			}
	
			private EasyObject _entity;
			private TearOffAggregateParameter _tearOff;
			
		}
	
		public AggregateClause Aggregate
		{
			get
			{
				if(_aggregateClause == null)
				{
					_aggregateClause = new AggregateClause(this);
				}
		
				return _aggregateClause;
			}
		}
		
		private AggregateClause _aggregateClause = null;	
		#endregion
	}
}
