/*
'===============================================================================
'  Generated From - CSharp_EasyObject_BusinessEntity.vbgen
' 
'  ** IMPORTANT  ** 
'  How to Generate your stored procedures:
' 
'  SQL      = SQL_DAAB_StoredProcs.vbgen
'  
'  This object is 'abstract' which means you need to inherit from it to be able
'  to instantiate it.  This is very easily done. You can override properties and
'  methods in your derived class, this allows you to regenerate this class at any
'  time and not worry about overwriting custom code. 
'
'  NEVER EDIT THIS FILE.
'
'  public class YourObject :  _YourObject
'  {
'
'  }
'
'===============================================================================
*/

// Generated by MyGeneration Version # (1.3.0.3)

using System;
using System.Data;
using System.Data.Common;
using System.Configuration;
using System.Collections;
using System.Collections.Specialized;
using System.Xml;
using System.IO;

using Microsoft.Practices.EnterpriseLibrary.Data;
using NCI.EasyObjects;

namespace BWA.bigWebDesk.DAL
{

	#region Schema

	public class PrioritiesSchema : NCI.EasyObjects.Schema
	{
		private static ArrayList _entries;
		public static SchemaItem DId = new SchemaItem("DId", DbType.Int32, false, false, false, true, true, false);
		public static SchemaItem Id = new SchemaItem("Id", DbType.Int32, true, false, false, true, true, false);
		public static SchemaItem TintPriority = new SchemaItem("tintPriority", DbType.Byte, false, false, false, false, false, false);
		public static SchemaItem Name = new SchemaItem("Name", DbType.AnsiString, SchemaItemJustify.None, 50, false, false, false, false);
		public static SchemaItem Description = new SchemaItem("Description", DbType.AnsiString, SchemaItemJustify.None, 2147483647, true, false, false, false);
		public static SchemaItem SLAPercentage = new SchemaItem("SLAPercentage", DbType.Byte, false, true, false, false, false, false);
		public static SchemaItem SLADays = new SchemaItem("SLADays", DbType.Byte, false, false, false, false, false, true);
		public static SchemaItem SLAHours = new SchemaItem("SLAHours", DbType.Byte, false, false, false, false, false, true);
		public static SchemaItem SLAMinutes = new SchemaItem("SLAMinutes", DbType.Byte, false, false, false, false, false, true);
		public static SchemaItem BitDefault = new SchemaItem("bitDefault", DbType.Boolean, false, true, false, false, false, false);
		public static SchemaItem BtSkipSaturday = new SchemaItem("btSkipSaturday", DbType.Boolean, false, false, false, false, false, true);
		public static SchemaItem BtSkipSunday = new SchemaItem("btSkipSunday", DbType.Boolean, false, false, false, false, false, true);
		public static SchemaItem BtSkipHolidays = new SchemaItem("btSkipHolidays", DbType.Boolean, false, false, false, false, false, true);
		public static SchemaItem BtUseBusHours = new SchemaItem("btUseBusHours", DbType.Boolean, false, false, false, false, false, true);
		public static SchemaItem SLAResponsePercentage = new SchemaItem("SLAResponsePercentage", DbType.Byte, false, true, false, false, false, false);
		public static SchemaItem SLAResponseDays = new SchemaItem("SLAResponseDays", DbType.Byte, false, false, false, false, false, true);
		public static SchemaItem SLAResponseHours = new SchemaItem("SLAResponseHours", DbType.Byte, false, false, false, false, false, true);
		public static SchemaItem SLAResponseMinutes = new SchemaItem("SLAResponseMinutes", DbType.Byte, false, false, false, false, false, true);
		public static SchemaItem BtResponseSkipSaturday = new SchemaItem("btResponseSkipSaturday", DbType.Boolean, false, false, false, false, false, true);
		public static SchemaItem BtResponseSkipSunday = new SchemaItem("btResponseSkipSunday", DbType.Boolean, false, false, false, false, false, true);
		public static SchemaItem BtResponseSkipHolidays = new SchemaItem("btResponseSkipHolidays", DbType.Boolean, false, false, false, false, false, true);
		public static SchemaItem BtResponseUseBusHours = new SchemaItem("btResponseUseBusHours", DbType.Boolean, false, false, false, false, false, true);
		public static SchemaItem BtRstrctUsr = new SchemaItem("btRstrctUsr", DbType.Boolean, false, false, false, false, false, true);

		public override ArrayList SchemaEntries
		{
			get
			{
				if (_entries == null )
				{
					_entries = new ArrayList();
					_entries.Add(PrioritiesSchema.DId);
					_entries.Add(PrioritiesSchema.Id);
					_entries.Add(PrioritiesSchema.TintPriority);
					_entries.Add(PrioritiesSchema.Name);
					_entries.Add(PrioritiesSchema.Description);
					_entries.Add(PrioritiesSchema.SLAPercentage);
					_entries.Add(PrioritiesSchema.SLADays);
					_entries.Add(PrioritiesSchema.SLAHours);
					_entries.Add(PrioritiesSchema.SLAMinutes);
					_entries.Add(PrioritiesSchema.BitDefault);
					_entries.Add(PrioritiesSchema.BtSkipSaturday);
					_entries.Add(PrioritiesSchema.BtSkipSunday);
					_entries.Add(PrioritiesSchema.BtSkipHolidays);
					_entries.Add(PrioritiesSchema.BtUseBusHours);
					_entries.Add(PrioritiesSchema.SLAResponsePercentage);
					_entries.Add(PrioritiesSchema.SLAResponseDays);
					_entries.Add(PrioritiesSchema.SLAResponseHours);
					_entries.Add(PrioritiesSchema.SLAResponseMinutes);
					_entries.Add(PrioritiesSchema.BtResponseSkipSaturday);
					_entries.Add(PrioritiesSchema.BtResponseSkipSunday);
					_entries.Add(PrioritiesSchema.BtResponseSkipHolidays);
					_entries.Add(PrioritiesSchema.BtResponseUseBusHours);
					_entries.Add(PrioritiesSchema.BtRstrctUsr);
				}
				return _entries;
			}
		}
	}
	#endregion

	public abstract class Priorities : EasyObject
	{

		public Priorities()
		{
			PrioritiesSchema _schema = new PrioritiesSchema();
			this.SchemaEntries = _schema.SchemaEntries;
			this.SchemaGlobal = "dbo";
		}
		
		public override void FlushData() 	 
		{ 	 
			this._whereClause = null; 	 
			this._aggregateClause = null; 	 
			base.FlushData(); 	 
		}
			   
		/// <summary>
		/// Loads the business object with info from the database, based on the requested primary key.
		/// </summary>
		/// <param name="DId"></param>
		/// <param name="Id"></param>
		/// <returns>A Boolean indicating success or failure of the query</returns>
		public bool LoadByPrimaryKey(int DId, int Id)
		{
			switch(this.DefaultCommandType)
			{
				case CommandType.StoredProcedure:
					ListDictionary parameters = new ListDictionary();

					// Add in parameters
					parameters.Add(PrioritiesSchema.DId.FieldName, DId);
					parameters.Add(PrioritiesSchema.Id.FieldName, Id);

					return base.LoadFromSql(this.SchemaStoredProcedureWithSeparator + "GetPriorities", parameters, CommandType.StoredProcedure);

				case CommandType.Text:
					this.Query.ClearAll();
					this.Where.WhereClauseReset();
					this.Where.DId.Value = DId;
					this.Where.Id.Value = Id;
					return this.Query.Load();

				default:
					throw new ArgumentException("Invalid CommandType", "commandType");
			}
		}
	
		/// <summary>
		/// Loads all records from the table.
		/// </summary>
		/// <returns>A Boolean indicating success or failure of the query</returns>
		public bool LoadAll()
		{
			switch(this.DefaultCommandType)
			{
				case CommandType.StoredProcedure:
					return base.LoadFromSql(this.SchemaStoredProcedureWithSeparator + "GetAllPriorities", null, CommandType.StoredProcedure);

				case CommandType.Text:
					this.Query.ClearAll();
					this.Where.WhereClauseReset();
					return this.Query.Load();

				default:
					throw new ArgumentException("Invalid CommandType", "commandType");
			}
		}

		/// <summary>
		/// Adds a new record to the internal table.
		/// </summary>
		public override void AddNew()
		{
			base.AddNew();
		}

		protected override DbCommand GetInsertCommand(CommandType commandType)
		{	
			DbCommand dbCommand;

			// Create the Database object, using the default database service. The
			// default database service is determined through configuration.
			Database db = GetDatabase();

			switch(commandType)
			{
				case CommandType.StoredProcedure:
					string sqlCommand = this.SchemaStoredProcedureWithSeparator + "AddPriorities";
					dbCommand = db.GetStoredProcCommand(sqlCommand);

					db.AddParameter(dbCommand, "Id", DbType.Int32, 0, ParameterDirection.Output, true, 0, 0, "Id", DataRowVersion.Default, Convert.DBNull);
					CreateParameters(db, dbCommand);
					
					return dbCommand;

				case CommandType.Text:
					this.Query.ClearAll();
					this.Where.WhereClauseReset();
					foreach(SchemaItem item in this.SchemaEntries)
					{
						if (!(item.IsAutoKey || item.IsComputed))
						{
							this.Query.AddInsertColumn(item);
						}
					}
					dbCommand = this.Query.GetInsertCommandWrapper();

					dbCommand.Parameters.Clear();
					CreateParameters(db, dbCommand);
					db.AddParameter(dbCommand, "Id", DbType.Int32, 0, ParameterDirection.Output, true, 0, 0, "Id", DataRowVersion.Default, Convert.DBNull);
					
					return dbCommand;

				default:
					throw new ArgumentException("Invalid CommandType", "commandType");
			}
		}

		protected override DbCommand GetUpdateCommand(CommandType commandType)
		{
            DbCommand dbCommand;

			// Create the Database object, using the default database service. The
			// default database service is determined through configuration.
			Database db = GetDatabase();

			switch(commandType)
			{
				case CommandType.StoredProcedure:
					string sqlCommand = this.SchemaStoredProcedureWithSeparator + "UpdatePriorities";
					dbCommand = db.GetStoredProcCommand(sqlCommand);

					db.AddInParameter(dbCommand, "Id", DbType.Int32, "Id", DataRowVersion.Current);
					CreateParameters(db, dbCommand);
					
					return dbCommand;

				case CommandType.Text:
					this.Query.ClearAll();
					foreach(SchemaItem item in this.SchemaEntries)
					{
						if (!(item.IsAutoKey || item.IsComputed))
						{
							this.Query.AddUpdateColumn(item);
						}
					}

					this.Where.WhereClauseReset();
					this.Where.Id.Operator = WhereParameter.Operand.Equal;
					dbCommand = this.Query.GetUpdateCommandWrapper();

					dbCommand.Parameters.Clear();
					CreateParameters(db, dbCommand);
					db.AddInParameter(dbCommand, "Id", DbType.Int32, "Id", DataRowVersion.Current);
					
					return dbCommand;

				default:
					throw new ArgumentException("Invalid CommandType", "commandType");
			}
		}

		protected override DbCommand GetDeleteCommand(CommandType commandType)
		{
            DbCommand dbCommand;

			// Create the Database object, using the default database service. The
			// default database service is determined through configuration.
			Database db = GetDatabase();

			switch(commandType)
			{
				case CommandType.StoredProcedure:
					string sqlCommand = this.SchemaStoredProcedureWithSeparator + "DeletePriorities";
					dbCommand = db.GetStoredProcCommand(sqlCommand);
					db.AddInParameter(dbCommand, "DId", DbType.Int32, "DId", DataRowVersion.Current);
					db.AddInParameter(dbCommand, "Id", DbType.Int32, "Id", DataRowVersion.Current);
					
					return dbCommand;

				case CommandType.Text:
					this.Query.ClearAll();
					this.Where.WhereClauseReset();
					this.Where.DId.Operator = WhereParameter.Operand.Equal;
					this.Where.Id.Operator = WhereParameter.Operand.Equal;
					dbCommand = this.Query.GetDeleteCommandWrapper();

					dbCommand.Parameters.Clear();
					db.AddInParameter(dbCommand, "DId", DbType.Int32, "DId", DataRowVersion.Current);
					db.AddInParameter(dbCommand, "Id", DbType.Int32, "Id", DataRowVersion.Current);
					
					return dbCommand;

				default:
					throw new ArgumentException("Invalid CommandType", "commandType");
			}
		}

		private void CreateParameters(Database db, DbCommand dbCommand)
		{
			db.AddInParameter(dbCommand, "DId", DbType.Int32, "DId", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "tintPriority", DbType.Byte, "tintPriority", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "Name", DbType.AnsiString, "Name", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "Description", DbType.AnsiString, "Description", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "SLAPercentage", DbType.Byte, "SLAPercentage", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "SLADays", DbType.Byte, "SLADays", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "SLAHours", DbType.Byte, "SLAHours", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "SLAMinutes", DbType.Byte, "SLAMinutes", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "bitDefault", DbType.Boolean, "bitDefault", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "btSkipSaturday", DbType.Boolean, "btSkipSaturday", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "btSkipSunday", DbType.Boolean, "btSkipSunday", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "btSkipHolidays", DbType.Boolean, "btSkipHolidays", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "btUseBusHours", DbType.Boolean, "btUseBusHours", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "SLAResponsePercentage", DbType.Byte, "SLAResponsePercentage", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "SLAResponseDays", DbType.Byte, "SLAResponseDays", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "SLAResponseHours", DbType.Byte, "SLAResponseHours", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "SLAResponseMinutes", DbType.Byte, "SLAResponseMinutes", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "btResponseSkipSaturday", DbType.Boolean, "btResponseSkipSaturday", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "btResponseSkipSunday", DbType.Boolean, "btResponseSkipSunday", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "btResponseSkipHolidays", DbType.Boolean, "btResponseSkipHolidays", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "btResponseUseBusHours", DbType.Boolean, "btResponseUseBusHours", DataRowVersion.Current);
			db.AddInParameter(dbCommand, "btRstrctUsr", DbType.Boolean, "btRstrctUsr", DataRowVersion.Current);
		}
		
		#region Properties
		public virtual int DId
		{
			get
			{
				return this.GetInteger(PrioritiesSchema.DId.FieldName);
	    	}
			set
			{
				this.SetInteger(PrioritiesSchema.DId.FieldName, value);
			}
		}
		public virtual int Id
		{
			get
			{
				return this.GetInteger(PrioritiesSchema.Id.FieldName);
	    	}
			set
			{
				this.SetInteger(PrioritiesSchema.Id.FieldName, value);
			}
		}
		public virtual byte TintPriority
		{
			get
			{
				return this.GetByte(PrioritiesSchema.TintPriority.FieldName);
	    	}
			set
			{
				this.SetByte(PrioritiesSchema.TintPriority.FieldName, value);
			}
		}
		public virtual string Name
		{
			get
			{
				return this.GetString(PrioritiesSchema.Name.FieldName);
	    	}
			set
			{
				this.SetString(PrioritiesSchema.Name.FieldName, value);
			}
		}
		public virtual string Description
		{
			get
			{
				return this.GetString(PrioritiesSchema.Description.FieldName);
	    	}
			set
			{
				this.SetString(PrioritiesSchema.Description.FieldName, value);
			}
		}
		public virtual byte SLAPercentage
		{
			get
			{
				return this.GetByte(PrioritiesSchema.SLAPercentage.FieldName);
	    	}
			set
			{
				this.SetByte(PrioritiesSchema.SLAPercentage.FieldName, value);
			}
		}
		public virtual byte SLADays
		{
			get
			{
				return this.GetByte(PrioritiesSchema.SLADays.FieldName);
	    	}
			set
			{
				this.SetByte(PrioritiesSchema.SLADays.FieldName, value);
			}
		}
		public virtual byte SLAHours
		{
			get
			{
				return this.GetByte(PrioritiesSchema.SLAHours.FieldName);
	    	}
			set
			{
				this.SetByte(PrioritiesSchema.SLAHours.FieldName, value);
			}
		}
		public virtual byte SLAMinutes
		{
			get
			{
				return this.GetByte(PrioritiesSchema.SLAMinutes.FieldName);
	    	}
			set
			{
				this.SetByte(PrioritiesSchema.SLAMinutes.FieldName, value);
			}
		}
		public virtual bool BitDefault
		{
			get
			{
				return this.GetBoolean(PrioritiesSchema.BitDefault.FieldName);
	    	}
			set
			{
				this.SetBoolean(PrioritiesSchema.BitDefault.FieldName, value);
			}
		}
		public virtual bool BtSkipSaturday
		{
			get
			{
				return this.GetBoolean(PrioritiesSchema.BtSkipSaturday.FieldName);
	    	}
			set
			{
				this.SetBoolean(PrioritiesSchema.BtSkipSaturday.FieldName, value);
			}
		}
		public virtual bool BtSkipSunday
		{
			get
			{
				return this.GetBoolean(PrioritiesSchema.BtSkipSunday.FieldName);
	    	}
			set
			{
				this.SetBoolean(PrioritiesSchema.BtSkipSunday.FieldName, value);
			}
		}
		public virtual bool BtSkipHolidays
		{
			get
			{
				return this.GetBoolean(PrioritiesSchema.BtSkipHolidays.FieldName);
	    	}
			set
			{
				this.SetBoolean(PrioritiesSchema.BtSkipHolidays.FieldName, value);
			}
		}
		public virtual bool BtUseBusHours
		{
			get
			{
				return this.GetBoolean(PrioritiesSchema.BtUseBusHours.FieldName);
	    	}
			set
			{
				this.SetBoolean(PrioritiesSchema.BtUseBusHours.FieldName, value);
			}
		}
		public virtual byte SLAResponsePercentage
		{
			get
			{
				return this.GetByte(PrioritiesSchema.SLAResponsePercentage.FieldName);
	    	}
			set
			{
				this.SetByte(PrioritiesSchema.SLAResponsePercentage.FieldName, value);
			}
		}
		public virtual byte SLAResponseDays
		{
			get
			{
				return this.GetByte(PrioritiesSchema.SLAResponseDays.FieldName);
	    	}
			set
			{
				this.SetByte(PrioritiesSchema.SLAResponseDays.FieldName, value);
			}
		}
		public virtual byte SLAResponseHours
		{
			get
			{
				return this.GetByte(PrioritiesSchema.SLAResponseHours.FieldName);
	    	}
			set
			{
				this.SetByte(PrioritiesSchema.SLAResponseHours.FieldName, value);
			}
		}
		public virtual byte SLAResponseMinutes
		{
			get
			{
				return this.GetByte(PrioritiesSchema.SLAResponseMinutes.FieldName);
	    	}
			set
			{
				this.SetByte(PrioritiesSchema.SLAResponseMinutes.FieldName, value);
			}
		}
		public virtual bool BtResponseSkipSaturday
		{
			get
			{
				return this.GetBoolean(PrioritiesSchema.BtResponseSkipSaturday.FieldName);
	    	}
			set
			{
				this.SetBoolean(PrioritiesSchema.BtResponseSkipSaturday.FieldName, value);
			}
		}
		public virtual bool BtResponseSkipSunday
		{
			get
			{
				return this.GetBoolean(PrioritiesSchema.BtResponseSkipSunday.FieldName);
	    	}
			set
			{
				this.SetBoolean(PrioritiesSchema.BtResponseSkipSunday.FieldName, value);
			}
		}
		public virtual bool BtResponseSkipHolidays
		{
			get
			{
				return this.GetBoolean(PrioritiesSchema.BtResponseSkipHolidays.FieldName);
	    	}
			set
			{
				this.SetBoolean(PrioritiesSchema.BtResponseSkipHolidays.FieldName, value);
			}
		}
		public virtual bool BtResponseUseBusHours
		{
			get
			{
				return this.GetBoolean(PrioritiesSchema.BtResponseUseBusHours.FieldName);
	    	}
			set
			{
				this.SetBoolean(PrioritiesSchema.BtResponseUseBusHours.FieldName, value);
			}
		}
		public virtual bool BtRstrctUsr
		{
			get
			{
				return this.GetBoolean(PrioritiesSchema.BtRstrctUsr.FieldName);
	    	}
			set
			{
				this.SetBoolean(PrioritiesSchema.BtRstrctUsr.FieldName, value);
			}
		}

		public override string TableName
		{
			get { return "Priorities"; }
		}
		
		#endregion		
		
		#region String Properties
	
		public virtual string s_DId
	    {
			get
	        {
				return this.IsColumnNull(PrioritiesSchema.DId.FieldName) ? string.Empty : base.GetIntegerAsString(PrioritiesSchema.DId.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(PrioritiesSchema.DId.FieldName);
				else
					this.DId = base.SetIntegerAsString(PrioritiesSchema.DId.FieldName, value);
			}
		}

		public virtual string s_Id
	    {
			get
	        {
				return this.IsColumnNull(PrioritiesSchema.Id.FieldName) ? string.Empty : base.GetIntegerAsString(PrioritiesSchema.Id.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(PrioritiesSchema.Id.FieldName);
				else
					this.Id = base.SetIntegerAsString(PrioritiesSchema.Id.FieldName, value);
			}
		}

		public virtual string s_TintPriority
	    {
			get
	        {
				return this.IsColumnNull(PrioritiesSchema.TintPriority.FieldName) ? string.Empty : base.GetByteAsString(PrioritiesSchema.TintPriority.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(PrioritiesSchema.TintPriority.FieldName);
				else
					this.TintPriority = base.SetByteAsString(PrioritiesSchema.TintPriority.FieldName, value);
			}
		}

		public virtual string s_Name
	    {
			get
	        {
				return this.IsColumnNull(PrioritiesSchema.Name.FieldName) ? string.Empty : base.GetStringAsString(PrioritiesSchema.Name.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(PrioritiesSchema.Name.FieldName);
				else
					this.Name = base.SetStringAsString(PrioritiesSchema.Name.FieldName, value);
			}
		}

		public virtual string s_Description
	    {
			get
	        {
				return this.IsColumnNull(PrioritiesSchema.Description.FieldName) ? string.Empty : base.GetStringAsString(PrioritiesSchema.Description.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(PrioritiesSchema.Description.FieldName);
				else
					this.Description = base.SetStringAsString(PrioritiesSchema.Description.FieldName, value);
			}
		}

		public virtual string s_SLAPercentage
	    {
			get
	        {
				return this.IsColumnNull(PrioritiesSchema.SLAPercentage.FieldName) ? string.Empty : base.GetByteAsString(PrioritiesSchema.SLAPercentage.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(PrioritiesSchema.SLAPercentage.FieldName);
				else
					this.SLAPercentage = base.SetByteAsString(PrioritiesSchema.SLAPercentage.FieldName, value);
			}
		}

		public virtual string s_SLADays
	    {
			get
	        {
				return this.IsColumnNull(PrioritiesSchema.SLADays.FieldName) ? string.Empty : base.GetByteAsString(PrioritiesSchema.SLADays.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(PrioritiesSchema.SLADays.FieldName);
				else
					this.SLADays = base.SetByteAsString(PrioritiesSchema.SLADays.FieldName, value);
			}
		}

		public virtual string s_SLAHours
	    {
			get
	        {
				return this.IsColumnNull(PrioritiesSchema.SLAHours.FieldName) ? string.Empty : base.GetByteAsString(PrioritiesSchema.SLAHours.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(PrioritiesSchema.SLAHours.FieldName);
				else
					this.SLAHours = base.SetByteAsString(PrioritiesSchema.SLAHours.FieldName, value);
			}
		}

		public virtual string s_SLAMinutes
	    {
			get
	        {
				return this.IsColumnNull(PrioritiesSchema.SLAMinutes.FieldName) ? string.Empty : base.GetByteAsString(PrioritiesSchema.SLAMinutes.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(PrioritiesSchema.SLAMinutes.FieldName);
				else
					this.SLAMinutes = base.SetByteAsString(PrioritiesSchema.SLAMinutes.FieldName, value);
			}
		}

		public virtual string s_BitDefault
	    {
			get
	        {
				return this.IsColumnNull(PrioritiesSchema.BitDefault.FieldName) ? string.Empty : base.GetBooleanAsString(PrioritiesSchema.BitDefault.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(PrioritiesSchema.BitDefault.FieldName);
				else
					this.BitDefault = base.SetBooleanAsString(PrioritiesSchema.BitDefault.FieldName, value);
			}
		}

		public virtual string s_BtSkipSaturday
	    {
			get
	        {
				return this.IsColumnNull(PrioritiesSchema.BtSkipSaturday.FieldName) ? string.Empty : base.GetBooleanAsString(PrioritiesSchema.BtSkipSaturday.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(PrioritiesSchema.BtSkipSaturday.FieldName);
				else
					this.BtSkipSaturday = base.SetBooleanAsString(PrioritiesSchema.BtSkipSaturday.FieldName, value);
			}
		}

		public virtual string s_BtSkipSunday
	    {
			get
	        {
				return this.IsColumnNull(PrioritiesSchema.BtSkipSunday.FieldName) ? string.Empty : base.GetBooleanAsString(PrioritiesSchema.BtSkipSunday.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(PrioritiesSchema.BtSkipSunday.FieldName);
				else
					this.BtSkipSunday = base.SetBooleanAsString(PrioritiesSchema.BtSkipSunday.FieldName, value);
			}
		}

		public virtual string s_BtSkipHolidays
	    {
			get
	        {
				return this.IsColumnNull(PrioritiesSchema.BtSkipHolidays.FieldName) ? string.Empty : base.GetBooleanAsString(PrioritiesSchema.BtSkipHolidays.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(PrioritiesSchema.BtSkipHolidays.FieldName);
				else
					this.BtSkipHolidays = base.SetBooleanAsString(PrioritiesSchema.BtSkipHolidays.FieldName, value);
			}
		}

		public virtual string s_BtUseBusHours
	    {
			get
	        {
				return this.IsColumnNull(PrioritiesSchema.BtUseBusHours.FieldName) ? string.Empty : base.GetBooleanAsString(PrioritiesSchema.BtUseBusHours.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(PrioritiesSchema.BtUseBusHours.FieldName);
				else
					this.BtUseBusHours = base.SetBooleanAsString(PrioritiesSchema.BtUseBusHours.FieldName, value);
			}
		}

		public virtual string s_SLAResponsePercentage
	    {
			get
	        {
				return this.IsColumnNull(PrioritiesSchema.SLAResponsePercentage.FieldName) ? string.Empty : base.GetByteAsString(PrioritiesSchema.SLAResponsePercentage.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(PrioritiesSchema.SLAResponsePercentage.FieldName);
				else
					this.SLAResponsePercentage = base.SetByteAsString(PrioritiesSchema.SLAResponsePercentage.FieldName, value);
			}
		}

		public virtual string s_SLAResponseDays
	    {
			get
	        {
				return this.IsColumnNull(PrioritiesSchema.SLAResponseDays.FieldName) ? string.Empty : base.GetByteAsString(PrioritiesSchema.SLAResponseDays.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(PrioritiesSchema.SLAResponseDays.FieldName);
				else
					this.SLAResponseDays = base.SetByteAsString(PrioritiesSchema.SLAResponseDays.FieldName, value);
			}
		}

		public virtual string s_SLAResponseHours
	    {
			get
	        {
				return this.IsColumnNull(PrioritiesSchema.SLAResponseHours.FieldName) ? string.Empty : base.GetByteAsString(PrioritiesSchema.SLAResponseHours.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(PrioritiesSchema.SLAResponseHours.FieldName);
				else
					this.SLAResponseHours = base.SetByteAsString(PrioritiesSchema.SLAResponseHours.FieldName, value);
			}
		}

		public virtual string s_SLAResponseMinutes
	    {
			get
	        {
				return this.IsColumnNull(PrioritiesSchema.SLAResponseMinutes.FieldName) ? string.Empty : base.GetByteAsString(PrioritiesSchema.SLAResponseMinutes.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(PrioritiesSchema.SLAResponseMinutes.FieldName);
				else
					this.SLAResponseMinutes = base.SetByteAsString(PrioritiesSchema.SLAResponseMinutes.FieldName, value);
			}
		}

		public virtual string s_BtResponseSkipSaturday
	    {
			get
	        {
				return this.IsColumnNull(PrioritiesSchema.BtResponseSkipSaturday.FieldName) ? string.Empty : base.GetBooleanAsString(PrioritiesSchema.BtResponseSkipSaturday.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(PrioritiesSchema.BtResponseSkipSaturday.FieldName);
				else
					this.BtResponseSkipSaturday = base.SetBooleanAsString(PrioritiesSchema.BtResponseSkipSaturday.FieldName, value);
			}
		}

		public virtual string s_BtResponseSkipSunday
	    {
			get
	        {
				return this.IsColumnNull(PrioritiesSchema.BtResponseSkipSunday.FieldName) ? string.Empty : base.GetBooleanAsString(PrioritiesSchema.BtResponseSkipSunday.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(PrioritiesSchema.BtResponseSkipSunday.FieldName);
				else
					this.BtResponseSkipSunday = base.SetBooleanAsString(PrioritiesSchema.BtResponseSkipSunday.FieldName, value);
			}
		}

		public virtual string s_BtResponseSkipHolidays
	    {
			get
	        {
				return this.IsColumnNull(PrioritiesSchema.BtResponseSkipHolidays.FieldName) ? string.Empty : base.GetBooleanAsString(PrioritiesSchema.BtResponseSkipHolidays.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(PrioritiesSchema.BtResponseSkipHolidays.FieldName);
				else
					this.BtResponseSkipHolidays = base.SetBooleanAsString(PrioritiesSchema.BtResponseSkipHolidays.FieldName, value);
			}
		}

		public virtual string s_BtResponseUseBusHours
	    {
			get
	        {
				return this.IsColumnNull(PrioritiesSchema.BtResponseUseBusHours.FieldName) ? string.Empty : base.GetBooleanAsString(PrioritiesSchema.BtResponseUseBusHours.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(PrioritiesSchema.BtResponseUseBusHours.FieldName);
				else
					this.BtResponseUseBusHours = base.SetBooleanAsString(PrioritiesSchema.BtResponseUseBusHours.FieldName, value);
			}
		}

		public virtual string s_BtRstrctUsr
	    {
			get
	        {
				return this.IsColumnNull(PrioritiesSchema.BtRstrctUsr.FieldName) ? string.Empty : base.GetBooleanAsString(PrioritiesSchema.BtRstrctUsr.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(PrioritiesSchema.BtRstrctUsr.FieldName);
				else
					this.BtRstrctUsr = base.SetBooleanAsString(PrioritiesSchema.BtRstrctUsr.FieldName, value);
			}
		}


		#endregion		
	
		#region Where Clause
		public class WhereClause
		{
			public WhereClause(EasyObject entity)
			{
				this._entity = entity;
			}
			
			public TearOffWhereParameter TearOff
			{
				get
				{
					if(_tearOff == null)
					{
						_tearOff = new TearOffWhereParameter(this);
					}

					return _tearOff;
				}
			}

			#region TearOff's
			public class TearOffWhereParameter
			{
				public TearOffWhereParameter(WhereClause clause)
				{
					this._clause = clause;
				}
				
				
				public WhereParameter DId
				{
					get
					{
							WhereParameter wp = new WhereParameter(PrioritiesSchema.DId);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter Id
				{
					get
					{
							WhereParameter wp = new WhereParameter(PrioritiesSchema.Id);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter TintPriority
				{
					get
					{
							WhereParameter wp = new WhereParameter(PrioritiesSchema.TintPriority);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter Name
				{
					get
					{
							WhereParameter wp = new WhereParameter(PrioritiesSchema.Name);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter Description
				{
					get
					{
							WhereParameter wp = new WhereParameter(PrioritiesSchema.Description);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter SLAPercentage
				{
					get
					{
							WhereParameter wp = new WhereParameter(PrioritiesSchema.SLAPercentage);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter SLADays
				{
					get
					{
							WhereParameter wp = new WhereParameter(PrioritiesSchema.SLADays);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter SLAHours
				{
					get
					{
							WhereParameter wp = new WhereParameter(PrioritiesSchema.SLAHours);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter SLAMinutes
				{
					get
					{
							WhereParameter wp = new WhereParameter(PrioritiesSchema.SLAMinutes);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter BitDefault
				{
					get
					{
							WhereParameter wp = new WhereParameter(PrioritiesSchema.BitDefault);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter BtSkipSaturday
				{
					get
					{
							WhereParameter wp = new WhereParameter(PrioritiesSchema.BtSkipSaturday);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter BtSkipSunday
				{
					get
					{
							WhereParameter wp = new WhereParameter(PrioritiesSchema.BtSkipSunday);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter BtSkipHolidays
				{
					get
					{
							WhereParameter wp = new WhereParameter(PrioritiesSchema.BtSkipHolidays);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter BtUseBusHours
				{
					get
					{
							WhereParameter wp = new WhereParameter(PrioritiesSchema.BtUseBusHours);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter SLAResponsePercentage
				{
					get
					{
							WhereParameter wp = new WhereParameter(PrioritiesSchema.SLAResponsePercentage);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter SLAResponseDays
				{
					get
					{
							WhereParameter wp = new WhereParameter(PrioritiesSchema.SLAResponseDays);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter SLAResponseHours
				{
					get
					{
							WhereParameter wp = new WhereParameter(PrioritiesSchema.SLAResponseHours);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter SLAResponseMinutes
				{
					get
					{
							WhereParameter wp = new WhereParameter(PrioritiesSchema.SLAResponseMinutes);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter BtResponseSkipSaturday
				{
					get
					{
							WhereParameter wp = new WhereParameter(PrioritiesSchema.BtResponseSkipSaturday);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter BtResponseSkipSunday
				{
					get
					{
							WhereParameter wp = new WhereParameter(PrioritiesSchema.BtResponseSkipSunday);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter BtResponseSkipHolidays
				{
					get
					{
							WhereParameter wp = new WhereParameter(PrioritiesSchema.BtResponseSkipHolidays);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter BtResponseUseBusHours
				{
					get
					{
							WhereParameter wp = new WhereParameter(PrioritiesSchema.BtResponseUseBusHours);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter BtRstrctUsr
				{
					get
					{
							WhereParameter wp = new WhereParameter(PrioritiesSchema.BtRstrctUsr);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}


				private WhereClause _clause;
			}
			#endregion
		
			public WhereParameter DId
		    {
				get
		        {
					if(_DId_W == null)
	        	    {
						_DId_W = TearOff.DId;
					}
					return _DId_W;
				}
			}

			public WhereParameter Id
		    {
				get
		        {
					if(_Id_W == null)
	        	    {
						_Id_W = TearOff.Id;
					}
					return _Id_W;
				}
			}

			public WhereParameter TintPriority
		    {
				get
		        {
					if(_TintPriority_W == null)
	        	    {
						_TintPriority_W = TearOff.TintPriority;
					}
					return _TintPriority_W;
				}
			}

			public WhereParameter Name
		    {
				get
		        {
					if(_Name_W == null)
	        	    {
						_Name_W = TearOff.Name;
					}
					return _Name_W;
				}
			}

			public WhereParameter Description
		    {
				get
		        {
					if(_Description_W == null)
	        	    {
						_Description_W = TearOff.Description;
					}
					return _Description_W;
				}
			}

			public WhereParameter SLAPercentage
		    {
				get
		        {
					if(_SLAPercentage_W == null)
	        	    {
						_SLAPercentage_W = TearOff.SLAPercentage;
					}
					return _SLAPercentage_W;
				}
			}

			public WhereParameter SLADays
		    {
				get
		        {
					if(_SLADays_W == null)
	        	    {
						_SLADays_W = TearOff.SLADays;
					}
					return _SLADays_W;
				}
			}

			public WhereParameter SLAHours
		    {
				get
		        {
					if(_SLAHours_W == null)
	        	    {
						_SLAHours_W = TearOff.SLAHours;
					}
					return _SLAHours_W;
				}
			}

			public WhereParameter SLAMinutes
		    {
				get
		        {
					if(_SLAMinutes_W == null)
	        	    {
						_SLAMinutes_W = TearOff.SLAMinutes;
					}
					return _SLAMinutes_W;
				}
			}

			public WhereParameter BitDefault
		    {
				get
		        {
					if(_BitDefault_W == null)
	        	    {
						_BitDefault_W = TearOff.BitDefault;
					}
					return _BitDefault_W;
				}
			}

			public WhereParameter BtSkipSaturday
		    {
				get
		        {
					if(_BtSkipSaturday_W == null)
	        	    {
						_BtSkipSaturday_W = TearOff.BtSkipSaturday;
					}
					return _BtSkipSaturday_W;
				}
			}

			public WhereParameter BtSkipSunday
		    {
				get
		        {
					if(_BtSkipSunday_W == null)
	        	    {
						_BtSkipSunday_W = TearOff.BtSkipSunday;
					}
					return _BtSkipSunday_W;
				}
			}

			public WhereParameter BtSkipHolidays
		    {
				get
		        {
					if(_BtSkipHolidays_W == null)
	        	    {
						_BtSkipHolidays_W = TearOff.BtSkipHolidays;
					}
					return _BtSkipHolidays_W;
				}
			}

			public WhereParameter BtUseBusHours
		    {
				get
		        {
					if(_BtUseBusHours_W == null)
	        	    {
						_BtUseBusHours_W = TearOff.BtUseBusHours;
					}
					return _BtUseBusHours_W;
				}
			}

			public WhereParameter SLAResponsePercentage
		    {
				get
		        {
					if(_SLAResponsePercentage_W == null)
	        	    {
						_SLAResponsePercentage_W = TearOff.SLAResponsePercentage;
					}
					return _SLAResponsePercentage_W;
				}
			}

			public WhereParameter SLAResponseDays
		    {
				get
		        {
					if(_SLAResponseDays_W == null)
	        	    {
						_SLAResponseDays_W = TearOff.SLAResponseDays;
					}
					return _SLAResponseDays_W;
				}
			}

			public WhereParameter SLAResponseHours
		    {
				get
		        {
					if(_SLAResponseHours_W == null)
	        	    {
						_SLAResponseHours_W = TearOff.SLAResponseHours;
					}
					return _SLAResponseHours_W;
				}
			}

			public WhereParameter SLAResponseMinutes
		    {
				get
		        {
					if(_SLAResponseMinutes_W == null)
	        	    {
						_SLAResponseMinutes_W = TearOff.SLAResponseMinutes;
					}
					return _SLAResponseMinutes_W;
				}
			}

			public WhereParameter BtResponseSkipSaturday
		    {
				get
		        {
					if(_BtResponseSkipSaturday_W == null)
	        	    {
						_BtResponseSkipSaturday_W = TearOff.BtResponseSkipSaturday;
					}
					return _BtResponseSkipSaturday_W;
				}
			}

			public WhereParameter BtResponseSkipSunday
		    {
				get
		        {
					if(_BtResponseSkipSunday_W == null)
	        	    {
						_BtResponseSkipSunday_W = TearOff.BtResponseSkipSunday;
					}
					return _BtResponseSkipSunday_W;
				}
			}

			public WhereParameter BtResponseSkipHolidays
		    {
				get
		        {
					if(_BtResponseSkipHolidays_W == null)
	        	    {
						_BtResponseSkipHolidays_W = TearOff.BtResponseSkipHolidays;
					}
					return _BtResponseSkipHolidays_W;
				}
			}

			public WhereParameter BtResponseUseBusHours
		    {
				get
		        {
					if(_BtResponseUseBusHours_W == null)
	        	    {
						_BtResponseUseBusHours_W = TearOff.BtResponseUseBusHours;
					}
					return _BtResponseUseBusHours_W;
				}
			}

			public WhereParameter BtRstrctUsr
		    {
				get
		        {
					if(_BtRstrctUsr_W == null)
	        	    {
						_BtRstrctUsr_W = TearOff.BtRstrctUsr;
					}
					return _BtRstrctUsr_W;
				}
			}

			private WhereParameter _DId_W = null;
			private WhereParameter _Id_W = null;
			private WhereParameter _TintPriority_W = null;
			private WhereParameter _Name_W = null;
			private WhereParameter _Description_W = null;
			private WhereParameter _SLAPercentage_W = null;
			private WhereParameter _SLADays_W = null;
			private WhereParameter _SLAHours_W = null;
			private WhereParameter _SLAMinutes_W = null;
			private WhereParameter _BitDefault_W = null;
			private WhereParameter _BtSkipSaturday_W = null;
			private WhereParameter _BtSkipSunday_W = null;
			private WhereParameter _BtSkipHolidays_W = null;
			private WhereParameter _BtUseBusHours_W = null;
			private WhereParameter _SLAResponsePercentage_W = null;
			private WhereParameter _SLAResponseDays_W = null;
			private WhereParameter _SLAResponseHours_W = null;
			private WhereParameter _SLAResponseMinutes_W = null;
			private WhereParameter _BtResponseSkipSaturday_W = null;
			private WhereParameter _BtResponseSkipSunday_W = null;
			private WhereParameter _BtResponseSkipHolidays_W = null;
			private WhereParameter _BtResponseUseBusHours_W = null;
			private WhereParameter _BtRstrctUsr_W = null;

			public void WhereClauseReset()
			{
				_DId_W = null;
				_Id_W = null;
				_TintPriority_W = null;
				_Name_W = null;
				_Description_W = null;
				_SLAPercentage_W = null;
				_SLADays_W = null;
				_SLAHours_W = null;
				_SLAMinutes_W = null;
				_BitDefault_W = null;
				_BtSkipSaturday_W = null;
				_BtSkipSunday_W = null;
				_BtSkipHolidays_W = null;
				_BtUseBusHours_W = null;
				_SLAResponsePercentage_W = null;
				_SLAResponseDays_W = null;
				_SLAResponseHours_W = null;
				_SLAResponseMinutes_W = null;
				_BtResponseSkipSaturday_W = null;
				_BtResponseSkipSunday_W = null;
				_BtResponseSkipHolidays_W = null;
				_BtResponseUseBusHours_W = null;
				_BtRstrctUsr_W = null;

				this._entity.Query.FlushWhereParameters();

			}
	
			private EasyObject _entity;
			private TearOffWhereParameter _tearOff;
			
		}
	
		public WhereClause Where
		{
			get
			{
				if(_whereClause == null)
				{
					_whereClause = new WhereClause(this);
				}
		
				return _whereClause;
			}
		}
		
		private WhereClause _whereClause = null;	
		#endregion
		
		#region Aggregate Clause
		public class AggregateClause
		{
			public AggregateClause(EasyObject entity)
			{
				this._entity = entity;
			}
			
			public TearOffAggregateParameter TearOff
			{
				get
				{
					if(_tearOff == null)
					{
						_tearOff = new TearOffAggregateParameter(this);
					}

					return _tearOff;
				}
			}

			#region TearOff's
			public class TearOffAggregateParameter
			{
				public TearOffAggregateParameter(AggregateClause clause)
				{
					this._clause = clause;
				}
				
				
				public AggregateParameter DId
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(PrioritiesSchema.DId);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter Id
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(PrioritiesSchema.Id);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter TintPriority
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(PrioritiesSchema.TintPriority);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter Name
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(PrioritiesSchema.Name);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter Description
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(PrioritiesSchema.Description);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter SLAPercentage
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(PrioritiesSchema.SLAPercentage);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter SLADays
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(PrioritiesSchema.SLADays);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter SLAHours
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(PrioritiesSchema.SLAHours);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter SLAMinutes
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(PrioritiesSchema.SLAMinutes);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter BitDefault
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(PrioritiesSchema.BitDefault);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter BtSkipSaturday
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(PrioritiesSchema.BtSkipSaturday);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter BtSkipSunday
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(PrioritiesSchema.BtSkipSunday);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter BtSkipHolidays
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(PrioritiesSchema.BtSkipHolidays);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter BtUseBusHours
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(PrioritiesSchema.BtUseBusHours);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter SLAResponsePercentage
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(PrioritiesSchema.SLAResponsePercentage);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter SLAResponseDays
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(PrioritiesSchema.SLAResponseDays);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter SLAResponseHours
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(PrioritiesSchema.SLAResponseHours);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter SLAResponseMinutes
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(PrioritiesSchema.SLAResponseMinutes);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter BtResponseSkipSaturday
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(PrioritiesSchema.BtResponseSkipSaturday);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter BtResponseSkipSunday
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(PrioritiesSchema.BtResponseSkipSunday);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter BtResponseSkipHolidays
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(PrioritiesSchema.BtResponseSkipHolidays);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter BtResponseUseBusHours
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(PrioritiesSchema.BtResponseUseBusHours);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter BtRstrctUsr
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(PrioritiesSchema.BtRstrctUsr);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}


				private AggregateClause _clause;
			}
			#endregion
		
			public AggregateParameter DId
		    {
				get
		        {
					if(_DId_W == null)
	        	    {
						_DId_W = TearOff.DId;
					}
					return _DId_W;
				}
			}

			public AggregateParameter Id
		    {
				get
		        {
					if(_Id_W == null)
	        	    {
						_Id_W = TearOff.Id;
					}
					return _Id_W;
				}
			}

			public AggregateParameter TintPriority
		    {
				get
		        {
					if(_TintPriority_W == null)
	        	    {
						_TintPriority_W = TearOff.TintPriority;
					}
					return _TintPriority_W;
				}
			}

			public AggregateParameter Name
		    {
				get
		        {
					if(_Name_W == null)
	        	    {
						_Name_W = TearOff.Name;
					}
					return _Name_W;
				}
			}

			public AggregateParameter Description
		    {
				get
		        {
					if(_Description_W == null)
	        	    {
						_Description_W = TearOff.Description;
					}
					return _Description_W;
				}
			}

			public AggregateParameter SLAPercentage
		    {
				get
		        {
					if(_SLAPercentage_W == null)
	        	    {
						_SLAPercentage_W = TearOff.SLAPercentage;
					}
					return _SLAPercentage_W;
				}
			}

			public AggregateParameter SLADays
		    {
				get
		        {
					if(_SLADays_W == null)
	        	    {
						_SLADays_W = TearOff.SLADays;
					}
					return _SLADays_W;
				}
			}

			public AggregateParameter SLAHours
		    {
				get
		        {
					if(_SLAHours_W == null)
	        	    {
						_SLAHours_W = TearOff.SLAHours;
					}
					return _SLAHours_W;
				}
			}

			public AggregateParameter SLAMinutes
		    {
				get
		        {
					if(_SLAMinutes_W == null)
	        	    {
						_SLAMinutes_W = TearOff.SLAMinutes;
					}
					return _SLAMinutes_W;
				}
			}

			public AggregateParameter BitDefault
		    {
				get
		        {
					if(_BitDefault_W == null)
	        	    {
						_BitDefault_W = TearOff.BitDefault;
					}
					return _BitDefault_W;
				}
			}

			public AggregateParameter BtSkipSaturday
		    {
				get
		        {
					if(_BtSkipSaturday_W == null)
	        	    {
						_BtSkipSaturday_W = TearOff.BtSkipSaturday;
					}
					return _BtSkipSaturday_W;
				}
			}

			public AggregateParameter BtSkipSunday
		    {
				get
		        {
					if(_BtSkipSunday_W == null)
	        	    {
						_BtSkipSunday_W = TearOff.BtSkipSunday;
					}
					return _BtSkipSunday_W;
				}
			}

			public AggregateParameter BtSkipHolidays
		    {
				get
		        {
					if(_BtSkipHolidays_W == null)
	        	    {
						_BtSkipHolidays_W = TearOff.BtSkipHolidays;
					}
					return _BtSkipHolidays_W;
				}
			}

			public AggregateParameter BtUseBusHours
		    {
				get
		        {
					if(_BtUseBusHours_W == null)
	        	    {
						_BtUseBusHours_W = TearOff.BtUseBusHours;
					}
					return _BtUseBusHours_W;
				}
			}

			public AggregateParameter SLAResponsePercentage
		    {
				get
		        {
					if(_SLAResponsePercentage_W == null)
	        	    {
						_SLAResponsePercentage_W = TearOff.SLAResponsePercentage;
					}
					return _SLAResponsePercentage_W;
				}
			}

			public AggregateParameter SLAResponseDays
		    {
				get
		        {
					if(_SLAResponseDays_W == null)
	        	    {
						_SLAResponseDays_W = TearOff.SLAResponseDays;
					}
					return _SLAResponseDays_W;
				}
			}

			public AggregateParameter SLAResponseHours
		    {
				get
		        {
					if(_SLAResponseHours_W == null)
	        	    {
						_SLAResponseHours_W = TearOff.SLAResponseHours;
					}
					return _SLAResponseHours_W;
				}
			}

			public AggregateParameter SLAResponseMinutes
		    {
				get
		        {
					if(_SLAResponseMinutes_W == null)
	        	    {
						_SLAResponseMinutes_W = TearOff.SLAResponseMinutes;
					}
					return _SLAResponseMinutes_W;
				}
			}

			public AggregateParameter BtResponseSkipSaturday
		    {
				get
		        {
					if(_BtResponseSkipSaturday_W == null)
	        	    {
						_BtResponseSkipSaturday_W = TearOff.BtResponseSkipSaturday;
					}
					return _BtResponseSkipSaturday_W;
				}
			}

			public AggregateParameter BtResponseSkipSunday
		    {
				get
		        {
					if(_BtResponseSkipSunday_W == null)
	        	    {
						_BtResponseSkipSunday_W = TearOff.BtResponseSkipSunday;
					}
					return _BtResponseSkipSunday_W;
				}
			}

			public AggregateParameter BtResponseSkipHolidays
		    {
				get
		        {
					if(_BtResponseSkipHolidays_W == null)
	        	    {
						_BtResponseSkipHolidays_W = TearOff.BtResponseSkipHolidays;
					}
					return _BtResponseSkipHolidays_W;
				}
			}

			public AggregateParameter BtResponseUseBusHours
		    {
				get
		        {
					if(_BtResponseUseBusHours_W == null)
	        	    {
						_BtResponseUseBusHours_W = TearOff.BtResponseUseBusHours;
					}
					return _BtResponseUseBusHours_W;
				}
			}

			public AggregateParameter BtRstrctUsr
		    {
				get
		        {
					if(_BtRstrctUsr_W == null)
	        	    {
						_BtRstrctUsr_W = TearOff.BtRstrctUsr;
					}
					return _BtRstrctUsr_W;
				}
			}

			private AggregateParameter _DId_W = null;
			private AggregateParameter _Id_W = null;
			private AggregateParameter _TintPriority_W = null;
			private AggregateParameter _Name_W = null;
			private AggregateParameter _Description_W = null;
			private AggregateParameter _SLAPercentage_W = null;
			private AggregateParameter _SLADays_W = null;
			private AggregateParameter _SLAHours_W = null;
			private AggregateParameter _SLAMinutes_W = null;
			private AggregateParameter _BitDefault_W = null;
			private AggregateParameter _BtSkipSaturday_W = null;
			private AggregateParameter _BtSkipSunday_W = null;
			private AggregateParameter _BtSkipHolidays_W = null;
			private AggregateParameter _BtUseBusHours_W = null;
			private AggregateParameter _SLAResponsePercentage_W = null;
			private AggregateParameter _SLAResponseDays_W = null;
			private AggregateParameter _SLAResponseHours_W = null;
			private AggregateParameter _SLAResponseMinutes_W = null;
			private AggregateParameter _BtResponseSkipSaturday_W = null;
			private AggregateParameter _BtResponseSkipSunday_W = null;
			private AggregateParameter _BtResponseSkipHolidays_W = null;
			private AggregateParameter _BtResponseUseBusHours_W = null;
			private AggregateParameter _BtRstrctUsr_W = null;

			public void AggregateClauseReset()
			{
				_DId_W = null;
				_Id_W = null;
				_TintPriority_W = null;
				_Name_W = null;
				_Description_W = null;
				_SLAPercentage_W = null;
				_SLADays_W = null;
				_SLAHours_W = null;
				_SLAMinutes_W = null;
				_BitDefault_W = null;
				_BtSkipSaturday_W = null;
				_BtSkipSunday_W = null;
				_BtSkipHolidays_W = null;
				_BtUseBusHours_W = null;
				_SLAResponsePercentage_W = null;
				_SLAResponseDays_W = null;
				_SLAResponseHours_W = null;
				_SLAResponseMinutes_W = null;
				_BtResponseSkipSaturday_W = null;
				_BtResponseSkipSunday_W = null;
				_BtResponseSkipHolidays_W = null;
				_BtResponseUseBusHours_W = null;
				_BtRstrctUsr_W = null;

				this._entity.Query.FlushAggregateParameters();

			}
	
			private EasyObject _entity;
			private TearOffAggregateParameter _tearOff;
			
		}
	
		public AggregateClause Aggregate
		{
			get
			{
				if(_aggregateClause == null)
				{
					_aggregateClause = new AggregateClause(this);
				}
		
				return _aggregateClause;
			}
		}
		
		private AggregateClause _aggregateClause = null;	
		#endregion
	}
}
